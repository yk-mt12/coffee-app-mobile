{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{memo,useState}from'react';import TextInput from\"react-native-web/dist/exports/TextInput\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import useColorScheme from\"react-native-web/dist/exports/useColorScheme\";import{useDispatch}from'react-redux';import{Text,View}from\"../Themed\";import{updateAmount,updateRatio,updateWater}from\"../../../redux/coffeeSlice\";import Colors from\"../../constants/Colors\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var RatioInput=memo(function(props){var dispatch=useDispatch();var title=props.title;var isDarkMode=useColorScheme()==='dark';var _useState=useState(0),_useState2=_slicedToArray(_useState,2),ratio=_useState2[0],setRatio=_useState2[1];return _jsxs(View,{children:[_jsx(Text,{style:styles.title,children:title}),_jsx(TextInput,{style:[styles.input,isDarkMode?styles.dark:styles.light],placeholder:\"input\",maxLength:2,returnKeyType:\"done\",keyboardType:\"numbers-and-punctuation\",onChangeText:function onChangeText(newText){return setRatio(Number(newText));},onSubmitEditing:function onSubmitEditing(){dispatch(updateRatio(ratio));dispatch(updateWater(0));dispatch(updateAmount(0));}})]});});var styles=StyleSheet.create({title:{fontSize:20,marginBottom:5},input:{padding:10,marginTop:8,borderRadius:10,width:'95%',fontSize:20},dark:{color:Colors['inputView'].wText,backgroundColor:Colors['inputView'].wBackground},light:{color:Colors['inputView'].dText,backgroundColor:Colors['inputView'].wBackground}});","map":{"version":3,"sources":["/Users/yukim/develop/react-native/coffee-app/src/components/Input/RatioInput.tsx"],"names":["memo","useState","useDispatch","Text","View","updateAmount","updateRatio","updateWater","Colors","RatioInput","props","dispatch","title","isDarkMode","useColorScheme","ratio","setRatio","styles","input","dark","light","newText","Number","StyleSheet","create","fontSize","marginBottom","padding","marginTop","borderRadius","width","color","wText","backgroundColor","wBackground","dText"],"mappings":"iEAAA,OAASA,IAAT,CAAeC,QAAf,KAA+B,OAA/B,C,yMAEA,OAASC,WAAT,KAA4B,aAA5B,CAEA,OAASC,IAAT,CAAeC,IAAf,iBACA,OAASC,YAAT,CAAuBC,WAAvB,CAAoCC,WAApC,kCAEA,MAAOC,CAAAA,MAAP,8B,wFAEA,MAAO,IAAMC,CAAAA,UAAU,CAAGT,IAAI,CAAC,SAACU,KAAD,CAA2B,CACxD,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CACA,GAAQU,CAAAA,KAAR,CAAkBF,KAAlB,CAAQE,KAAR,CACA,GAAMC,CAAAA,UAAU,CAAGC,cAAc,KAAO,MAAxC,CACA,cAA0Bb,QAAQ,CAAS,CAAT,CAAlC,wCAAOc,KAAP,eAAcC,QAAd,eAEA,MACE,OAAC,IAAD,YACE,KAAC,IAAD,EAAM,KAAK,CAAEC,MAAM,CAACL,KAApB,UAA4BA,KAA5B,EADF,CAEE,KAAC,SAAD,EACE,KAAK,CAAE,CAACK,MAAM,CAACC,KAAR,CAAeL,UAAU,CAAGI,MAAM,CAACE,IAAV,CAAiBF,MAAM,CAACG,KAAjD,CADT,CAEE,WAAW,CAAC,OAFd,CAGE,SAAS,CAAE,CAHb,CAIE,aAAa,CAAC,MAJhB,CAKE,YAAY,CAAC,yBALf,CAOE,YAAY,CAAE,sBAACC,OAAD,QAAaL,CAAAA,QAAQ,CAACM,MAAM,CAACD,OAAD,CAAP,CAArB,EAPhB,CAQE,eAAe,CAAE,0BAAM,CACrBV,QAAQ,CAACL,WAAW,CAACS,KAAD,CAAZ,CAAR,CACAJ,QAAQ,CAACJ,WAAW,CAAC,CAAD,CAAZ,CAAR,CACAI,QAAQ,CAACN,YAAY,CAAC,CAAD,CAAb,CAAR,CACD,CAZH,EAFF,GADF,CAmBD,CAzB6B,CAAvB,CA2BP,GAAMY,CAAAA,MAAM,CAAGM,UAAU,CAACC,MAAX,CAAkB,CAC/BZ,KAAK,CAAE,CACLa,QAAQ,CAAE,EADL,CAELC,YAAY,CAAE,CAFT,CADwB,CAK/BR,KAAK,CAAE,CACLS,OAAO,CAAE,EADJ,CAELC,SAAS,CAAE,CAFN,CAGLC,YAAY,CAAE,EAHT,CAILC,KAAK,CAAE,KAJF,CAKLL,QAAQ,CAAE,EALL,CALwB,CAY/BN,IAAI,CAAE,CACJY,KAAK,CAAEvB,MAAM,CAAC,WAAD,CAAN,CAAoBwB,KADvB,CAEJC,eAAe,CAAEzB,MAAM,CAAC,WAAD,CAAN,CAAoB0B,WAFjC,CAZyB,CAgB/Bd,KAAK,CAAE,CACLW,KAAK,CAAEvB,MAAM,CAAC,WAAD,CAAN,CAAoB2B,KADtB,CAELF,eAAe,CAAEzB,MAAM,CAAC,WAAD,CAAN,CAAoB0B,WAFhC,CAhBwB,CAAlB,CAAf","sourcesContent":["import { memo, useState } from 'react';\nimport { TextInput, StyleSheet, useColorScheme } from 'react-native';\nimport { useDispatch } from 'react-redux';\n\nimport { Text, View } from '../Themed';\nimport { updateAmount, updateRatio, updateWater } from '../../../redux/coffeeSlice';\nimport { RatioInputType } from '../../types/type';\nimport Colors from '../../constants/Colors';\n\nexport const RatioInput = memo((props: RatioInputType) => {\n  const dispatch = useDispatch();\n  const { title } = props;\n  const isDarkMode = useColorScheme() === 'dark';\n  const [ratio, setRatio] = useState<number>(0);\n\n  return (\n    <View>\n      <Text style={styles.title}>{title}</Text>\n      <TextInput\n        style={[styles.input, isDarkMode ? styles.dark : styles.light]}\n        placeholder=\"input\"\n        maxLength={2}\n        returnKeyType=\"done\"\n        keyboardType=\"numbers-and-punctuation\"\n        // textAlign=\"center\"\n        onChangeText={(newText) => setRatio(Number(newText))}\n        onSubmitEditing={() => {\n          dispatch(updateRatio(ratio));\n          dispatch(updateWater(0));\n          dispatch(updateAmount(0));\n        }}\n      />\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 20,\n    marginBottom: 5,\n  },\n  input: {\n    padding: 10,\n    marginTop: 8,\n    borderRadius: 10,\n    width: '95%',\n    fontSize: 20,\n  },\n  dark: {\n    color: Colors['inputView'].wText,\n    backgroundColor: Colors['inputView'].wBackground,\n  },\n  light: {\n    color: Colors['inputView'].dText,\n    backgroundColor: Colors['inputView'].wBackground,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}