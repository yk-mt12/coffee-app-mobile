{"ast":null,"code":"import React,{memo}from'react';import useColorScheme from\"react-native-web/dist/exports/useColorScheme\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{useSelector}from'react-redux';import Colors from\"../../assets/constants/Colors\";import{Text,View}from\"../../assets/constants/Themed\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";export var AmountView=memo(function(){var isDarkMode=useColorScheme()==='dark';var _useSelector=useSelector(function(state){return state.coffee;}),amount=_useSelector.amount;return _jsx(View,{style:[styles.container,isDarkMode?styles.dark:styles.light],children:_jsxs(Text,{style:styles.text,children:[amount,\" g\"]})});});var styles=StyleSheet.create({container:{padding:8,marginTop:8,borderRadius:10,width:100,height:40},text:{fontSize:25,textAlign:'center'},dark:{color:Colors['inputView'].wText,backgroundColor:Colors['inputView'].wBackground},light:{color:Colors['inputView'].dText,backgroundColor:Colors['inputView'].wBackground}});","map":{"version":3,"sources":["/Users/yukim/programming/my-app/coffee-app-mobile/src/components/View/AmountView.tsx"],"names":["React","memo","useSelector","Colors","Text","View","AmountView","isDarkMode","useColorScheme","state","coffee","amount","styles","container","dark","light","text","StyleSheet","create","padding","marginTop","borderRadius","width","height","fontSize","textAlign","color","wText","backgroundColor","wBackground","dText"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,IAAhB,KAAiD,OAAjD,C,0IAEA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAOC,CAAAA,MAAP,qCACA,OAASC,IAAT,CAAeC,IAAf,qC,wFAEA,MAAO,IAAMC,CAAAA,UAAU,CAAGL,IAAI,CAAC,UAAM,CACnC,GAAMM,CAAAA,UAAU,CAAGC,cAAc,KAAO,MAAxC,CACA,iBAAmBN,WAAW,CAAC,SAACO,KAAD,QAAWA,CAAAA,KAAK,CAACC,MAAjB,EAAD,CAA9B,CAAQC,MAAR,cAAQA,MAAR,CAEA,MACE,MAAC,IAAD,EAAM,KAAK,CAAE,CAACC,MAAM,CAACC,SAAR,CAAmBN,UAAU,CAAGK,MAAM,CAACE,IAAV,CAAiBF,MAAM,CAACG,KAArD,CAAb,UACE,MAAC,IAAD,EAAM,KAAK,CAAEH,MAAM,CAACI,IAApB,WAA2BL,MAA3B,QADF,EADF,CAKD,CAT6B,CAAvB,CAWP,GAAMC,CAAAA,MAAM,CAAGK,UAAU,CAACC,MAAX,CAAkB,CAC/BL,SAAS,CAAE,CACTM,OAAO,CAAE,CADA,CAETC,SAAS,CAAE,CAFF,CAGTC,YAAY,CAAE,EAHL,CAITC,KAAK,CAAE,GAJE,CAKTC,MAAM,CAAE,EALC,CADoB,CAQ/BP,IAAI,CAAE,CACJQ,QAAQ,CAAE,EADN,CAEJC,SAAS,CAAE,QAFP,CARyB,CAY/BX,IAAI,CAAE,CACJY,KAAK,CAAEvB,MAAM,CAAC,WAAD,CAAN,CAAoBwB,KADvB,CAEJC,eAAe,CAAEzB,MAAM,CAAC,WAAD,CAAN,CAAoB0B,WAFjC,CAZyB,CAgB/Bd,KAAK,CAAE,CACLW,KAAK,CAAEvB,MAAM,CAAC,WAAD,CAAN,CAAoB2B,KADtB,CAELF,eAAe,CAAEzB,MAAM,CAAC,WAAD,CAAN,CAAoB0B,WAFhC,CAhBwB,CAAlB,CAAf","sourcesContent":["import React, { memo, useEffect, useState } from 'react';\nimport { useColorScheme, StyleSheet } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport Colors from '../../assets/constants/Colors';\nimport { Text, View } from '../../assets/constants/Themed';\n\nexport const AmountView = memo(() => {\n  const isDarkMode = useColorScheme() === 'dark';\n  const { amount } = useSelector((state) => state.coffee);\n\n  return (\n    <View style={[styles.container, isDarkMode ? styles.dark : styles.light]}>\n      <Text style={styles.text}>{amount} g</Text>\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8,\n    marginTop: 8,\n    borderRadius: 10,\n    width: 100,\n    height: 40,\n  },\n  text: {\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  dark: {\n    color: Colors['inputView'].wText,\n    backgroundColor: Colors['inputView'].wBackground,\n  },\n  light: {\n    color: Colors['inputView'].dText,\n    backgroundColor: Colors['inputView'].wBackground,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}