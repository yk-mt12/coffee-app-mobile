{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{memo,useState}from'react';import{Text,View}from\"../Themed\";import{Stopwatch}from'react-native-stopwatch-timer';import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Colors from\"../../constants/Colors\";import useColorScheme from\"react-native-web/dist/exports/useColorScheme\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var TimerView=memo(function(){var isDarkMode=useColorScheme()==='dark';var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isStopwatchStart=_useState2[0],setIsStopwatchStart=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),resetStopwatch=_useState4[0],setResetStopwatch=_useState4[1];return _jsx(_Fragment,{children:_jsxs(View,{style:styles.container,children:[_jsx(View,{style:[styles.sectionStyle,isDarkMode?styles.dark:styles.light],children:_jsx(Stopwatch,{start:isStopwatchStart,reset:resetStopwatch,options:options,style:isDarkMode?styles.dark:styles.light})}),_jsxs(View,{style:[styles.button],children:[_jsx(TouchableHighlight,{onPress:function onPress(){setIsStopwatchStart(false);setResetStopwatch(true);},style:[styles.resetButton],children:_jsx(Text,{style:[styles.buttonText],children:\"RESET\"})}),_jsx(TouchableHighlight,{onPress:function onPress(){setIsStopwatchStart(!isStopwatchStart);setResetStopwatch(false);},style:[isStopwatchStart?styles.stopButton:styles.startButton],children:_jsx(Text,{style:[styles.buttonText],children:!isStopwatchStart?'START':'STOP'})})]})]})});});var styles=StyleSheet.create({container:{marginTop:15},sectionStyle:{},button:{flexDirection:'row',justifyContent:'space-between',marginTop:10,marginHorizontal:40},buttonText:{fontSize:20},dark:{color:Colors['inputView'].wText},light:{color:Colors['inputView'].dText},startButton:{width:80,height:80,justifyContent:'center',alignItems:'center',padding:10,borderRadius:100,color:Colors['timerButtonLight'].startText,backgroundColor:Colors['timerButtonLight'].startBackground},stopButton:{color:Colors['timerButtonLight'].stopText,backgroundColor:Colors['timerButtonLight'].stopBackground,width:80,height:80,justifyContent:'center',alignItems:'center',padding:10,borderRadius:100},resetButton:{color:Colors['timerResetButton'].text,backgroundColor:Colors['timerResetButton'].background,width:80,height:80,justifyContent:'center',alignItems:'center',padding:10,borderRadius:100},darkRightLayout:{},lightRightLayout:{}});var options={container:{padding:20,borderRadius:4,width:'98%',alignItems:'center'},text:{fontSize:84,fontWeight:'300',color:Colors['inputView'].wText,margin:20}};","map":{"version":3,"sources":["/Users/yukim/develop/react-native/coffee-app/components/View/TimerView.tsx"],"names":["React","memo","useState","Text","View","Stopwatch","Colors","TimerView","isDarkMode","useColorScheme","isStopwatchStart","setIsStopwatchStart","resetStopwatch","setResetStopwatch","styles","container","sectionStyle","dark","light","options","button","resetButton","buttonText","stopButton","startButton","StyleSheet","create","marginTop","flexDirection","justifyContent","marginHorizontal","fontSize","color","wText","dText","width","height","alignItems","padding","borderRadius","startText","backgroundColor","startBackground","stopText","stopBackground","text","background","darkRightLayout","lightRightLayout","fontWeight","margin"],"mappings":"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","sourcesContent":["import React, { memo, useEffect, useState } from 'react';\nimport { Text, View } from '../Themed';\nimport { Stopwatch } from 'react-native-stopwatch-timer';\nimport { TouchableHighlight, StyleSheet } from 'react-native';\nimport Colors from '../../constants/Colors';\nimport { useColorScheme } from 'react-native';\n\nexport const TimerView = memo(() => {\n  const isDarkMode = useColorScheme() === 'dark';\n  const [isStopwatchStart, setIsStopwatchStart] = useState(false);\n  const [resetStopwatch, setResetStopwatch] = useState(false);\n\n  return (\n    <>\n      <View style={styles.container}>\n        <View style={[styles.sectionStyle, isDarkMode ? styles.dark : styles.light]}>\n          <Stopwatch\n            start={isStopwatchStart}\n            reset={resetStopwatch}\n            options={options}\n            style={isDarkMode ? styles.dark : styles.light}\n          />\n        </View>\n        <View style={[styles.button]}>\n          <TouchableHighlight\n            onPress={() => {\n              setIsStopwatchStart(false);\n              setResetStopwatch(true);\n            }}\n            style={[styles.resetButton]}>\n            <Text style={[styles.buttonText]}>RESET</Text>\n          </TouchableHighlight>\n          <TouchableHighlight\n            onPress={() => {\n              setIsStopwatchStart(!isStopwatchStart);\n              setResetStopwatch(false);\n            }}\n            style={[isStopwatchStart ? styles.stopButton : styles.startButton]}>\n            <Text\n              style={[\n                styles.buttonText,\n                // isDarkMode ? styles.darkRightLayout : styles.lightRightLayout,\n              ]}>\n              {!isStopwatchStart ? 'START' : 'STOP'}\n            </Text>\n          </TouchableHighlight>\n        </View>\n      </View>\n    </>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: 15,\n  },\n  sectionStyle: {},\n  button: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 10,\n    marginHorizontal: 40,\n  },\n  buttonText: {\n    fontSize: 20,\n  },\n  dark: {\n    color: Colors['inputView'].wText,\n    // backgroundColor: Colors['inputView'].wBackground,\n  },\n  light: {\n    color: Colors['inputView'].dText,\n    // backgroundColor: Colors['inputView'].wBackground,\n  },\n  startButton: {\n    width: 80,\n    height: 80,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    borderRadius: 100,\n    color: Colors['timerButtonLight'].startText,\n    backgroundColor: Colors['timerButtonLight'].startBackground,\n  },\n  stopButton: {\n    color: Colors['timerButtonLight'].stopText,\n    backgroundColor: Colors['timerButtonLight'].stopBackground,\n    width: 80,\n    height: 80,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    borderRadius: 100,\n  },\n  resetButton: {\n    color: Colors['timerResetButton'].text,\n    backgroundColor: Colors['timerResetButton'].background,\n    width: 80,\n    height: 80,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    borderRadius: 100,\n  },\n  darkRightLayout: {\n    // color: Colors['timerButtonDark']\n  },\n  lightRightLayout: {},\n});\n\nconst options = {\n  container: {\n    padding: 20,\n    borderRadius: 4,\n    width: '98%',\n    alignItems: 'center',\n  },\n  text: {\n    fontSize: 84,\n    fontWeight: '300',\n    color: Colors['inputView'].wText,\n    margin: 20,\n  },\n};\n"]},"metadata":{},"sourceType":"module"}