{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';export var initialState={amount:0,water:0,ratio:15,isWater:false};export var CoffeeSlice=createSlice({name:'coffee',initialState:initialState,reducers:{updateAmount:function updateAmount(state,action){state.amount=action.payload;},updateWater:function updateWater(state,action){state.water=action.payload;},updateRatio:function updateRatio(state,action){state.ratio=action.payload;},updateIsWater:function updateIsWater(state){state.isWater=!state.isWater;},calculateAmount:function calculateAmount(state,action){state.amount=Math.round(action.payload/state.ratio);},calculateWater:function calculateWater(state,action){state.water=Math.round(action.payload*state.ratio);},calculateIceCoffeeAmount:function calculateIceCoffeeAmount(state,action){state.amount=Math.round(action.payload/state.ratio*2);},calculateIceCoffeeWater:function calculateIceCoffeeWater(state,action){state.water=Math.round(action.payload*state.ratio/2);}}});var _CoffeeSlice$actions=CoffeeSlice.actions,updateIsWater=_CoffeeSlice$actions.updateIsWater,updateWater=_CoffeeSlice$actions.updateWater,updateRatio=_CoffeeSlice$actions.updateRatio,updateAmount=_CoffeeSlice$actions.updateAmount,calculateAmount=_CoffeeSlice$actions.calculateAmount,calculateWater=_CoffeeSlice$actions.calculateWater,calculateIceCoffeeWater=_CoffeeSlice$actions.calculateIceCoffeeWater,calculateIceCoffeeAmount=_CoffeeSlice$actions.calculateIceCoffeeAmount;export{updateIsWater,updateWater,updateRatio,updateAmount,calculateAmount,calculateWater,calculateIceCoffeeWater,calculateIceCoffeeAmount};export default CoffeeSlice.reducer;","map":{"version":3,"sources":["/Users/yukim/programming/my-app/coffee-app-mobile/redux/coffeeSlice.ts"],"names":["createSlice","initialState","amount","water","ratio","isWater","CoffeeSlice","name","reducers","updateAmount","state","action","payload","updateWater","updateRatio","updateIsWater","calculateAmount","Math","round","calculateWater","calculateIceCoffeeAmount","calculateIceCoffeeWater","actions","reducer"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAGA,MAAO,IAAMC,CAAAA,YAAwB,CAAG,CACtCC,MAAM,CAAE,CAD8B,CAEtCC,KAAK,CAAE,CAF+B,CAGtCC,KAAK,CAAE,EAH+B,CAOtCC,OAAO,CAAE,KAP6B,CAAjC,CAUP,MAAO,IAAMC,CAAAA,WAAW,CAAGN,WAAW,CAAC,CACrCO,IAAI,CAAE,QAD+B,CAErCN,YAAY,CAAZA,YAFqC,CAGrCO,QAAQ,CAAE,CACRC,YAAY,CAAE,sBAACC,KAAD,CAAQC,MAAR,CAAmB,CAC/BD,KAAK,CAACR,MAAN,CAAeS,MAAM,CAACC,OAAtB,CACD,CAHO,CAIRC,WAAW,CAAE,qBAACH,KAAD,CAAQC,MAAR,CAAmB,CAC9BD,KAAK,CAACP,KAAN,CAAcQ,MAAM,CAACC,OAArB,CACD,CANO,CAORE,WAAW,CAAE,qBAACJ,KAAD,CAAQC,MAAR,CAAmB,CAC9BD,KAAK,CAACN,KAAN,CAAcO,MAAM,CAACC,OAArB,CACD,CATO,CAURG,aAAa,CAAE,uBAACL,KAAD,CAAW,CACxBA,KAAK,CAACL,OAAN,CAAgB,CAACK,KAAK,CAACL,OAAvB,CACD,CAZO,CAaRW,eAAe,CAAE,yBAACN,KAAD,CAAQC,MAAR,CAAmB,CAClCD,KAAK,CAACR,MAAN,CAAee,IAAI,CAACC,KAAL,CAAWP,MAAM,CAACC,OAAP,CAAiBF,KAAK,CAACN,KAAlC,CAAf,CACD,CAfO,CAgBRe,cAAc,CAAE,wBAACT,KAAD,CAAQC,MAAR,CAAmB,CACjCD,KAAK,CAACP,KAAN,CAAcc,IAAI,CAACC,KAAL,CAAWP,MAAM,CAACC,OAAP,CAAiBF,KAAK,CAACN,KAAlC,CAAd,CACD,CAlBO,CAmBRgB,wBAAwB,CAAE,kCAACV,KAAD,CAAQC,MAAR,CAAmB,CAC3CD,KAAK,CAACR,MAAN,CAAee,IAAI,CAACC,KAAL,CAAYP,MAAM,CAACC,OAAP,CAAiBF,KAAK,CAACN,KAAxB,CAAiC,CAA5C,CAAf,CACD,CArBO,CAsBRiB,uBAAuB,CAAE,iCAACX,KAAD,CAAQC,MAAR,CAAmB,CAC1CD,KAAK,CAACP,KAAN,CAAcc,IAAI,CAACC,KAAL,CAAYP,MAAM,CAACC,OAAP,CAAiBF,KAAK,CAACN,KAAxB,CAAiC,CAA5C,CAAd,CACD,CAxBO,CAH2B,CAAD,CAA/B,CA+BA,yBASHE,WAAW,CAACgB,OATT,CACLP,aADK,sBACLA,aADK,CAELF,WAFK,sBAELA,WAFK,CAGLC,WAHK,sBAGLA,WAHK,CAILL,YAJK,sBAILA,YAJK,CAKLO,eALK,sBAKLA,eALK,CAMLG,cANK,sBAMLA,cANK,CAOLE,uBAPK,sBAOLA,uBAPK,CAQLD,wBARK,sBAQLA,wBARK,C,2IAWP,cAAed,CAAAA,WAAW,CAACiB,OAA3B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { CoffeeType } from './type';\n\nexport const initialState: CoffeeType = {\n  amount: 0,\n  water: 0,\n  ratio: 15,\n  // iceAmount: 0,\n  // iceWater: 0,\n  // iceRatio: 15,\n  isWater: false,\n};\n\nexport const CoffeeSlice = createSlice({\n  name: 'coffee',\n  initialState,\n  reducers: {\n    updateAmount: (state, action) => {\n      state.amount = action.payload;\n    },\n    updateWater: (state, action) => {\n      state.water = action.payload;\n    },\n    updateRatio: (state, action) => {\n      state.ratio = action.payload;\n    },\n    updateIsWater: (state) => {\n      state.isWater = !state.isWater;\n    },\n    calculateAmount: (state, action) => {\n      state.amount = Math.round(action.payload / state.ratio);\n    },\n    calculateWater: (state, action) => {\n      state.water = Math.round(action.payload * state.ratio);\n    },\n    calculateIceCoffeeAmount: (state, action) => {\n      state.amount = Math.round((action.payload / state.ratio) * 2);\n    },\n    calculateIceCoffeeWater: (state, action) => {\n      state.water = Math.round((action.payload * state.ratio) / 2);\n    },\n  },\n});\n\nexport const {\n  updateIsWater,\n  updateWater,\n  updateRatio,\n  updateAmount,\n  calculateAmount,\n  calculateWater,\n  calculateIceCoffeeWater,\n  calculateIceCoffeeAmount,\n} = CoffeeSlice.actions;\n\nexport default CoffeeSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}