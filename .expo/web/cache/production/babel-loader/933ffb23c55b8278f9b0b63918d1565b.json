{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{memo,useState}from'react';import TextInput from\"react-native-web/dist/exports/TextInput\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import useColorScheme from\"react-native-web/dist/exports/useColorScheme\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import{useDispatch,useSelector}from'react-redux';import Colors from\"../../assets/constants/Colors\";import{calculateAmount,calculateIceCoffeeAmount,updateWater}from\"../../../redux/coffeeSlice\";import{jsx as _jsx}from\"react/jsx-runtime\";export var WaterInput=memo(function(){var dispatch=useDispatch();var isDarkMode=useColorScheme()==='dark';var _useState=useState(0),_useState2=_slicedToArray(_useState,2),water=_useState2[0],setWater=_useState2[1];var nowScreen=useSelector(function(state){return state.screen.nowScreen;});return _jsx(SafeAreaView,{style:styles.container,children:_jsx(TextInput,{style:[styles.input,isDarkMode?styles.dark:styles.light],placeholder:\"input\",maxLength:3,returnKeyType:\"done\",keyboardType:\"numbers-and-punctuation\",textAlign:\"center\",onChangeText:function onChangeText(newText){return setWater(Number(newText));},onSubmitEditing:function onSubmitEditing(){dispatch(updateWater(water));if(nowScreen==='normal'||nowScreen==='cafeAuLait'){dispatch(calculateAmount(water));}else if(nowScreen==='iceCoffee'){dispatch(calculateIceCoffeeAmount(water));}}})});});var styles=StyleSheet.create({container:{flex:1},title:{fontSize:25,marginBottom:15,left:-5,textAlign:'center'},input:{padding:8,marginTop:8,borderRadius:10,width:100,height:40,fontSize:25,textAlign:'center'},dark:{color:Colors['inputView'].wText,backgroundColor:Colors['inputView'].wBackground},light:{color:Colors['inputView'].dText,backgroundColor:Colors['inputView'].wBackground}});","map":{"version":3,"sources":["/Users/yukim/programming/my-app/coffee-app-mobile/src/components/Input/WaterInput.tsx"],"names":["memo","useState","useDispatch","useSelector","Colors","calculateAmount","calculateIceCoffeeAmount","updateWater","WaterInput","dispatch","isDarkMode","useColorScheme","water","setWater","nowScreen","state","screen","styles","container","input","dark","light","newText","Number","StyleSheet","create","flex","title","fontSize","marginBottom","left","textAlign","padding","marginTop","borderRadius","width","height","color","wText","backgroundColor","wBackground","dText"],"mappings":"iEAAA,OAASA,IAAT,CAAeC,QAAf,KAA+B,OAA/B,C,8QAEA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,MAAP,qCACA,OAASC,eAAT,CAA0BC,wBAA1B,CAAoDC,WAApD,kC,2CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAGR,IAAI,CAAC,UAAM,CACnC,GAAMS,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CACA,GAAMQ,CAAAA,UAAU,CAAGC,cAAc,KAAO,MAAxC,CACA,cAA0BV,QAAQ,CAAS,CAAT,CAAlC,wCAAOW,KAAP,eAAcC,QAAd,eACA,GAAMC,CAAAA,SAAS,CAAGX,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACC,MAAN,CAAaF,SAAxB,EAAD,CAA7B,CAEA,MACE,MAAC,YAAD,EAAc,KAAK,CAAEG,MAAM,CAACC,SAA5B,UACE,KAAC,SAAD,EACE,KAAK,CAAE,CAACD,MAAM,CAACE,KAAR,CAAeT,UAAU,CAAGO,MAAM,CAACG,IAAV,CAAiBH,MAAM,CAACI,KAAjD,CADT,CAEE,WAAW,CAAC,OAFd,CAGE,SAAS,CAAE,CAHb,CAIE,aAAa,CAAC,MAJhB,CAKE,YAAY,CAAC,yBALf,CAME,SAAS,CAAC,QANZ,CAOE,YAAY,CAAE,sBAACC,OAAD,QAAaT,CAAAA,QAAQ,CAACU,MAAM,CAACD,OAAD,CAAP,CAArB,EAPhB,CAQE,eAAe,CAAE,0BAAM,CACrBb,QAAQ,CAACF,WAAW,CAACK,KAAD,CAAZ,CAAR,CACA,GAAIE,SAAS,GAAK,QAAd,EAA0BA,SAAS,GAAK,YAA5C,CAA0D,CACxDL,QAAQ,CAACJ,eAAe,CAACO,KAAD,CAAhB,CAAR,CACD,CAFD,IAEO,IAAIE,SAAS,GAAK,WAAlB,CAA+B,CACpCL,QAAQ,CAACH,wBAAwB,CAACM,KAAD,CAAzB,CAAR,CACD,CACF,CAfH,EADF,EADF,CAqBD,CA3B6B,CAAvB,CA6BP,GAAMK,CAAAA,MAAM,CAAGO,UAAU,CAACC,MAAX,CAAkB,CAC/BP,SAAS,CAAE,CACTQ,IAAI,CAAE,CADG,CADoB,CAI/BC,KAAK,CAAE,CACLC,QAAQ,CAAE,EADL,CAELC,YAAY,CAAE,EAFT,CAGLC,IAAI,CAAE,CAAC,CAHF,CAILC,SAAS,CAAE,QAJN,CAJwB,CAU/BZ,KAAK,CAAE,CACLa,OAAO,CAAE,CADJ,CAELC,SAAS,CAAE,CAFN,CAGLC,YAAY,CAAE,EAHT,CAILC,KAAK,CAAE,GAJF,CAKLC,MAAM,CAAE,EALH,CAMLR,QAAQ,CAAE,EANL,CAOLG,SAAS,CAAE,QAPN,CAVwB,CAmB/BX,IAAI,CAAE,CACJiB,KAAK,CAAEjC,MAAM,CAAC,WAAD,CAAN,CAAoBkC,KADvB,CAEJC,eAAe,CAAEnC,MAAM,CAAC,WAAD,CAAN,CAAoBoC,WAFjC,CAnByB,CAuB/BnB,KAAK,CAAE,CACLgB,KAAK,CAAEjC,MAAM,CAAC,WAAD,CAAN,CAAoBqC,KADtB,CAELF,eAAe,CAAEnC,MAAM,CAAC,WAAD,CAAN,CAAoBoC,WAFhC,CAvBwB,CAAlB,CAAf","sourcesContent":["import { memo, useState } from 'react';\nimport { TextInput, StyleSheet, useColorScheme, SafeAreaView } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Colors from '../../assets/constants/Colors';\nimport { calculateAmount, calculateIceCoffeeAmount, updateWater } from '../../../redux/coffeeSlice';\n\nexport const WaterInput = memo(() => {\n  const dispatch = useDispatch();\n  const isDarkMode = useColorScheme() === 'dark';\n  const [water, setWater] = useState<number>(0);\n  const nowScreen = useSelector((state) => state.screen.nowScreen);\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <TextInput\n        style={[styles.input, isDarkMode ? styles.dark : styles.light]}\n        placeholder=\"input\"\n        maxLength={3}\n        returnKeyType=\"done\"\n        keyboardType=\"numbers-and-punctuation\"\n        textAlign=\"center\"\n        onChangeText={(newText) => setWater(Number(newText))}\n        onSubmitEditing={() => {\n          dispatch(updateWater(water));\n          if (nowScreen === 'normal' || nowScreen === 'cafeAuLait') {\n            dispatch(calculateAmount(water));\n          } else if (nowScreen === 'iceCoffee') {\n            dispatch(calculateIceCoffeeAmount(water));\n          }\n        }}\n      />\n    </SafeAreaView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  title: {\n    fontSize: 25,\n    marginBottom: 15,\n    left: -5,\n    textAlign: 'center',\n  },\n  input: {\n    padding: 8,\n    marginTop: 8,\n    borderRadius: 10,\n    width: 100,\n    height: 40,\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  dark: {\n    color: Colors['inputView'].wText,\n    backgroundColor: Colors['inputView'].wBackground,\n  },\n  light: {\n    color: Colors['inputView'].dText,\n    backgroundColor: Colors['inputView'].wBackground,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}