{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';export var initialState={amount:0,water:0,ratio:15,iceAmount:0,iceWater:0,iceRatio:15,isWater:false};export var CoffeeSlice=createSlice({name:'coffee',initialState:initialState,reducers:{updateAmount:function updateAmount(state,action){state.amount=action.payload;},updateWater:function updateWater(state,action){state.water=action.payload;},updateRatio:function updateRatio(state,action){state.ratio=action.payload;},updateIsWater:function updateIsWater(state){state.isWater=!state.isWater;},calculateAmount:function calculateAmount(state,action){state.amount=Math.round(action.payload/state.ratio);},calculateWater:function calculateWater(state,action){state.water=Math.round(action.payload*state.ratio);},updateIceAmount:function updateIceAmount(state,action){state.iceAmount=action.payload;},updateIceWater:function updateIceWater(state,action){state.iceWater=action.payload;},calculateIceCoffeeAmount:function calculateIceCoffeeAmount(state,action){state.iceAmount=Math.round(action.payload/state.iceRatio*2);},calculateIceCoffeeWater:function calculateIceCoffeeWater(state,action){state.iceWater=Math.round(action.payload*state.iceRatio/2);}}});var _CoffeeSlice$actions=CoffeeSlice.actions,updateIsWater=_CoffeeSlice$actions.updateIsWater,updateWater=_CoffeeSlice$actions.updateWater,updateRatio=_CoffeeSlice$actions.updateRatio,updateAmount=_CoffeeSlice$actions.updateAmount,updateIceAmount=_CoffeeSlice$actions.updateIceAmount,updateIceWater=_CoffeeSlice$actions.updateIceWater,calculateAmount=_CoffeeSlice$actions.calculateAmount,calculateWater=_CoffeeSlice$actions.calculateWater,calculateIceCoffeeWater=_CoffeeSlice$actions.calculateIceCoffeeWater,calculateIceCoffeeAmount=_CoffeeSlice$actions.calculateIceCoffeeAmount;export{updateIsWater,updateWater,updateRatio,updateAmount,updateIceAmount,updateIceWater,calculateAmount,calculateWater,calculateIceCoffeeWater,calculateIceCoffeeAmount};export default CoffeeSlice.reducer;","map":{"version":3,"sources":["/Users/yukim/develop/react-native/coffee-app/redux/coffeeSlice.ts"],"names":["createSlice","initialState","amount","water","ratio","iceAmount","iceWater","iceRatio","isWater","CoffeeSlice","name","reducers","updateAmount","state","action","payload","updateWater","updateRatio","updateIsWater","calculateAmount","Math","round","calculateWater","updateIceAmount","updateIceWater","calculateIceCoffeeAmount","calculateIceCoffeeWater","actions","reducer"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAGA,MAAO,IAAMC,CAAAA,YAAwB,CAAG,CACtCC,MAAM,CAAE,CAD8B,CAEtCC,KAAK,CAAE,CAF+B,CAGtCC,KAAK,CAAE,EAH+B,CAItCC,SAAS,CAAE,CAJ2B,CAKtCC,QAAQ,CAAE,CAL4B,CAMtCC,QAAQ,CAAE,EAN4B,CAOtCC,OAAO,CAAE,KAP6B,CAAjC,CAUP,MAAO,IAAMC,CAAAA,WAAW,CAAGT,WAAW,CAAC,CACrCU,IAAI,CAAE,QAD+B,CAErCT,YAAY,CAAZA,YAFqC,CAGrCU,QAAQ,CAAE,CACRC,YAAY,CAAE,sBAACC,KAAD,CAAQC,MAAR,CAAmB,CAC/BD,KAAK,CAACX,MAAN,CAAeY,MAAM,CAACC,OAAtB,CACD,CAHO,CAIRC,WAAW,CAAE,qBAACH,KAAD,CAAQC,MAAR,CAAmB,CAC9BD,KAAK,CAACV,KAAN,CAAcW,MAAM,CAACC,OAArB,CACD,CANO,CAORE,WAAW,CAAE,qBAACJ,KAAD,CAAQC,MAAR,CAAmB,CAC9BD,KAAK,CAACT,KAAN,CAAcU,MAAM,CAACC,OAArB,CACD,CATO,CAURG,aAAa,CAAE,uBAACL,KAAD,CAAW,CACxBA,KAAK,CAACL,OAAN,CAAgB,CAACK,KAAK,CAACL,OAAvB,CACD,CAZO,CAaRW,eAAe,CAAE,yBAACN,KAAD,CAAQC,MAAR,CAAmB,CAClCD,KAAK,CAACX,MAAN,CAAekB,IAAI,CAACC,KAAL,CAAWP,MAAM,CAACC,OAAP,CAAiBF,KAAK,CAACT,KAAlC,CAAf,CACD,CAfO,CAgBRkB,cAAc,CAAE,wBAACT,KAAD,CAAQC,MAAR,CAAmB,CACjCD,KAAK,CAACV,KAAN,CAAciB,IAAI,CAACC,KAAL,CAAWP,MAAM,CAACC,OAAP,CAAiBF,KAAK,CAACT,KAAlC,CAAd,CACD,CAlBO,CAmBRmB,eAAe,CAAE,yBAACV,KAAD,CAAQC,MAAR,CAAmB,CAClCD,KAAK,CAACR,SAAN,CAAkBS,MAAM,CAACC,OAAzB,CACD,CArBO,CAsBRS,cAAc,CAAE,wBAACX,KAAD,CAAQC,MAAR,CAAmB,CACjCD,KAAK,CAACP,QAAN,CAAiBQ,MAAM,CAACC,OAAxB,CACD,CAxBO,CAyBRU,wBAAwB,CAAE,kCAACZ,KAAD,CAAQC,MAAR,CAAmB,CAC3CD,KAAK,CAACR,SAAN,CAAkBe,IAAI,CAACC,KAAL,CAAYP,MAAM,CAACC,OAAP,CAAiBF,KAAK,CAACN,QAAxB,CAAoC,CAA/C,CAAlB,CACD,CA3BO,CA4BRmB,uBAAuB,CAAE,iCAACb,KAAD,CAAQC,MAAR,CAAmB,CAC1CD,KAAK,CAACP,QAAN,CAAiBc,IAAI,CAACC,KAAL,CAAYP,MAAM,CAACC,OAAP,CAAiBF,KAAK,CAACN,QAAxB,CAAoC,CAA/C,CAAjB,CACD,CA9BO,CAH2B,CAAD,CAA/B,CAqCA,yBAWHE,WAAW,CAACkB,OAXT,CACLT,aADK,sBACLA,aADK,CAELF,WAFK,sBAELA,WAFK,CAGLC,WAHK,sBAGLA,WAHK,CAILL,YAJK,sBAILA,YAJK,CAKLW,eALK,sBAKLA,eALK,CAMLC,cANK,sBAMLA,cANK,CAOLL,eAPK,sBAOLA,eAPK,CAQLG,cARK,sBAQLA,cARK,CASLI,uBATK,sBASLA,uBATK,CAULD,wBAVK,sBAULA,wBAVK,C,0KAaP,cAAehB,CAAAA,WAAW,CAACmB,OAA3B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { CoffeeType } from './type';\n\nexport const initialState: CoffeeType = {\n  amount: 0,\n  water: 0,\n  ratio: 15,\n  iceAmount: 0,\n  iceWater: 0,\n  iceRatio: 15,\n  isWater: false,\n};\n\nexport const CoffeeSlice = createSlice({\n  name: 'coffee',\n  initialState,\n  reducers: {\n    updateAmount: (state, action) => {\n      state.amount = action.payload;\n    },\n    updateWater: (state, action) => {\n      state.water = action.payload;\n    },\n    updateRatio: (state, action) => {\n      state.ratio = action.payload;\n    },\n    updateIsWater: (state) => {\n      state.isWater = !state.isWater;\n    },\n    calculateAmount: (state, action) => {\n      state.amount = Math.round(action.payload / state.ratio);\n    },\n    calculateWater: (state, action) => {\n      state.water = Math.round(action.payload * state.ratio);\n    },\n    updateIceAmount: (state, action) => {\n      state.iceAmount = action.payload;\n    },\n    updateIceWater: (state, action) => {\n      state.iceWater = action.payload;\n    },\n    calculateIceCoffeeAmount: (state, action) => {\n      state.iceAmount = Math.round((action.payload / state.iceRatio) * 2);\n    },\n    calculateIceCoffeeWater: (state, action) => {\n      state.iceWater = Math.round((action.payload * state.iceRatio) / 2);\n    },\n  },\n});\n\nexport const {\n  updateIsWater,\n  updateWater,\n  updateRatio,\n  updateAmount,\n  updateIceAmount,\n  updateIceWater,\n  calculateAmount,\n  calculateWater,\n  calculateIceCoffeeWater,\n  calculateIceCoffeeAmount,\n} = CoffeeSlice.actions;\n\nexport default CoffeeSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}