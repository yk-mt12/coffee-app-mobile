{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"state\",\"descriptors\",\"dimensions\",\"insets\",\"style\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{MissingIcon}from'@react-navigation/elements';import{CommonActions,NavigationContext,NavigationRouteContext,useLinkBuilder,useTheme}from'@react-navigation/native';import React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{useSafeAreaFrame}from'react-native-safe-area-context';import BottomTabBarHeightCallbackContext from\"../utils/BottomTabBarHeightCallbackContext\";import useIsKeyboardShown from\"../utils/useIsKeyboardShown\";import BottomTabItem from\"./BottomTabItem\";var DEFAULT_TABBAR_HEIGHT=49;var COMPACT_TABBAR_HEIGHT=32;var DEFAULT_MAX_TAB_ITEM_WIDTH=125;var useNativeDriver=Platform.OS!=='web';var shouldUseHorizontalLabels=function shouldUseHorizontalLabels(_ref){var state=_ref.state,descriptors=_ref.descriptors,layout=_ref.layout,dimensions=_ref.dimensions;var tabBarLabelPosition=descriptors[state.routes[state.index].key].options.tabBarLabelPosition;if(tabBarLabelPosition){switch(tabBarLabelPosition){case'beside-icon':return true;case'below-icon':return false;}}if(layout.width>=768){var maxTabWidth=state.routes.reduce(function(acc,route){var tabBarItemStyle=descriptors[route.key].options.tabBarItemStyle;var flattenedStyle=StyleSheet.flatten(tabBarItemStyle);if(flattenedStyle){if(typeof flattenedStyle.width==='number'){return acc+flattenedStyle.width;}else if(typeof flattenedStyle.maxWidth==='number'){return acc+flattenedStyle.maxWidth;}}return acc+DEFAULT_MAX_TAB_ITEM_WIDTH;},0);return maxTabWidth<=layout.width;}else{return dimensions.width>dimensions.height;}};var getPaddingBottom=function getPaddingBottom(insets){return Math.max(insets.bottom-Platform.select({ios:4,default:0}),0);};export var getTabBarHeight=function getTabBarHeight(_ref2){var _StyleSheet$flatten;var state=_ref2.state,descriptors=_ref2.descriptors,dimensions=_ref2.dimensions,insets=_ref2.insets,style=_ref2.style,rest=_objectWithoutProperties(_ref2,_excluded);var customHeight=(_StyleSheet$flatten=StyleSheet.flatten(style))===null||_StyleSheet$flatten===void 0?void 0:_StyleSheet$flatten.height;if(typeof customHeight==='number'){return customHeight;}var isLandscape=dimensions.width>dimensions.height;var horizontalLabels=shouldUseHorizontalLabels(_objectSpread({state:state,descriptors:descriptors,dimensions:dimensions},rest));var paddingBottom=getPaddingBottom(insets);if(Platform.OS==='ios'&&!Platform.isPad&&isLandscape&&horizontalLabels){return COMPACT_TABBAR_HEIGHT+paddingBottom;}return DEFAULT_TABBAR_HEIGHT+paddingBottom;};export default function BottomTabBar(_ref3){var state=_ref3.state,navigation=_ref3.navigation,descriptors=_ref3.descriptors,insets=_ref3.insets,style=_ref3.style;var _useTheme=useTheme(),colors=_useTheme.colors;var buildLink=useLinkBuilder();var focusedRoute=state.routes[state.index];var focusedDescriptor=descriptors[focusedRoute.key];var focusedOptions=focusedDescriptor.options;var tabBarShowLabel=focusedOptions.tabBarShowLabel,_focusedOptions$tabBa=focusedOptions.tabBarHideOnKeyboard,tabBarHideOnKeyboard=_focusedOptions$tabBa===void 0?false:_focusedOptions$tabBa,tabBarVisibilityAnimationConfig=focusedOptions.tabBarVisibilityAnimationConfig,tabBarStyle=focusedOptions.tabBarStyle,tabBarBackground=focusedOptions.tabBarBackground,tabBarActiveTintColor=focusedOptions.tabBarActiveTintColor,tabBarInactiveTintColor=focusedOptions.tabBarInactiveTintColor,tabBarActiveBackgroundColor=focusedOptions.tabBarActiveBackgroundColor,tabBarInactiveBackgroundColor=focusedOptions.tabBarInactiveBackgroundColor;var dimensions=useSafeAreaFrame();var isKeyboardShown=useIsKeyboardShown();var onHeightChange=React.useContext(BottomTabBarHeightCallbackContext);var shouldShowTabBar=!(tabBarHideOnKeyboard&&isKeyboardShown);var visibilityAnimationConfigRef=React.useRef(tabBarVisibilityAnimationConfig);React.useEffect(function(){visibilityAnimationConfigRef.current=tabBarVisibilityAnimationConfig;});var _React$useState=React.useState(!shouldShowTabBar),_React$useState2=_slicedToArray(_React$useState,2),isTabBarHidden=_React$useState2[0],setIsTabBarHidden=_React$useState2[1];var _React$useState3=React.useState(function(){return new Animated.Value(shouldShowTabBar?1:0);}),_React$useState4=_slicedToArray(_React$useState3,1),visible=_React$useState4[0];React.useEffect(function(){var visibilityAnimationConfig=visibilityAnimationConfigRef.current;if(shouldShowTabBar){var _visibilityAnimationC,_visibilityAnimationC2;var animation=(visibilityAnimationConfig===null||visibilityAnimationConfig===void 0?void 0:(_visibilityAnimationC=visibilityAnimationConfig.show)===null||_visibilityAnimationC===void 0?void 0:_visibilityAnimationC.animation)==='spring'?Animated.spring:Animated.timing;animation(visible,_objectSpread({toValue:1,useNativeDriver:useNativeDriver,duration:250},visibilityAnimationConfig===null||visibilityAnimationConfig===void 0?void 0:(_visibilityAnimationC2=visibilityAnimationConfig.show)===null||_visibilityAnimationC2===void 0?void 0:_visibilityAnimationC2.config)).start(function(_ref4){var finished=_ref4.finished;if(finished){setIsTabBarHidden(false);}});}else{var _visibilityAnimationC3,_visibilityAnimationC4;setIsTabBarHidden(true);var _animation=(visibilityAnimationConfig===null||visibilityAnimationConfig===void 0?void 0:(_visibilityAnimationC3=visibilityAnimationConfig.hide)===null||_visibilityAnimationC3===void 0?void 0:_visibilityAnimationC3.animation)==='spring'?Animated.spring:Animated.timing;_animation(visible,_objectSpread({toValue:0,useNativeDriver:useNativeDriver,duration:200},visibilityAnimationConfig===null||visibilityAnimationConfig===void 0?void 0:(_visibilityAnimationC4=visibilityAnimationConfig.hide)===null||_visibilityAnimationC4===void 0?void 0:_visibilityAnimationC4.config)).start();}return function(){return visible.stopAnimation();};},[visible,shouldShowTabBar]);var _React$useState5=React.useState({height:0,width:dimensions.width}),_React$useState6=_slicedToArray(_React$useState5,2),layout=_React$useState6[0],setLayout=_React$useState6[1];var handleLayout=function handleLayout(e){var _e$nativeEvent$layout=e.nativeEvent.layout,height=_e$nativeEvent$layout.height,width=_e$nativeEvent$layout.width;onHeightChange===null||onHeightChange===void 0?void 0:onHeightChange(height);setLayout(function(layout){if(height===layout.height&&width===layout.width){return layout;}else{return{height:height,width:width};}});};var routes=state.routes;var paddingBottom=getPaddingBottom(insets);var tabBarHeight=getTabBarHeight({state:state,descriptors:descriptors,insets:insets,dimensions:dimensions,layout:layout,style:[tabBarStyle,style]});var hasHorizontalLabels=shouldUseHorizontalLabels({state:state,descriptors:descriptors,dimensions:dimensions,layout:layout});var tabBarBackgroundElement=tabBarBackground===null||tabBarBackground===void 0?void 0:tabBarBackground();return React.createElement(Animated.View,{style:[styles.tabBar,{backgroundColor:tabBarBackgroundElement!=null?'transparent':colors.card,borderTopColor:colors.border},{transform:[{translateY:visible.interpolate({inputRange:[0,1],outputRange:[layout.height+paddingBottom+StyleSheet.hairlineWidth,0]})}],position:isTabBarHidden?'absolute':null},{height:tabBarHeight,paddingBottom:paddingBottom,paddingHorizontal:Math.max(insets.left,insets.right)},tabBarStyle],pointerEvents:isTabBarHidden?'none':'auto',onLayout:handleLayout},React.createElement(View,{pointerEvents:\"none\",style:StyleSheet.absoluteFill},tabBarBackgroundElement),React.createElement(View,{accessibilityRole:\"tablist\",style:styles.content},routes.map(function(route,index){var _options$tabBarIcon;var focused=index===state.index;var options=descriptors[route.key].options;var onPress=function onPress(){var event=navigation.emit({type:'tabPress',target:route.key,canPreventDefault:true});if(!focused&&!event.defaultPrevented){navigation.dispatch(_objectSpread(_objectSpread({},CommonActions.navigate({name:route.name,merge:true})),{},{target:state.key}));}};var onLongPress=function onLongPress(){navigation.emit({type:'tabLongPress',target:route.key});};var label=options.tabBarLabel!==undefined?options.tabBarLabel:options.title!==undefined?options.title:route.name;var accessibilityLabel=options.tabBarAccessibilityLabel!==undefined?options.tabBarAccessibilityLabel:typeof label==='string'&&Platform.OS==='ios'?label+\", tab, \"+(index+1)+\" of \"+routes.length:undefined;return React.createElement(NavigationContext.Provider,{key:route.key,value:descriptors[route.key].navigation},React.createElement(NavigationRouteContext.Provider,{value:route},React.createElement(BottomTabItem,{route:route,focused:focused,horizontal:hasHorizontalLabels,onPress:onPress,onLongPress:onLongPress,accessibilityLabel:accessibilityLabel,to:buildLink(route.name,route.params),testID:options.tabBarTestID,allowFontScaling:options.tabBarAllowFontScaling,activeTintColor:tabBarActiveTintColor,inactiveTintColor:tabBarInactiveTintColor,activeBackgroundColor:tabBarActiveBackgroundColor,inactiveBackgroundColor:tabBarInactiveBackgroundColor,button:options.tabBarButton,icon:(_options$tabBarIcon=options.tabBarIcon)!==null&&_options$tabBarIcon!==void 0?_options$tabBarIcon:function(_ref5){var color=_ref5.color,size=_ref5.size;return React.createElement(MissingIcon,{color:color,size:size});},badge:options.tabBarBadge,badgeStyle:options.tabBarBadgeStyle,label:label,showLabel:tabBarShowLabel,labelStyle:options.tabBarLabelStyle,iconStyle:options.tabBarIconStyle,style:options.tabBarItemStyle})));})));}var styles=StyleSheet.create({tabBar:{left:0,right:0,bottom:0,borderTopWidth:StyleSheet.hairlineWidth,elevation:8},content:{flex:1,flexDirection:'row'}});","map":{"version":3,"sources":["BottomTabBar.tsx"],"names":["DEFAULT_TABBAR_HEIGHT","COMPACT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","Platform","shouldUseHorizontalLabels","dimensions","tabBarLabelPosition","descriptors","state","layout","maxTabWidth","tabBarItemStyle","route","flattenedStyle","StyleSheet","acc","getPaddingBottom","insets","ios","default","getTabBarHeight","rest","customHeight","isLandscape","horizontalLabels","paddingBottom","style","colors","useTheme","buildLink","useLinkBuilder","focusedRoute","focusedDescriptor","focusedOptions","tabBarHideOnKeyboard","tabBarInactiveBackgroundColor","useSafeAreaFrame","isKeyboardShown","useIsKeyboardShown","onHeightChange","React","shouldShowTabBar","visibilityAnimationConfigRef","Animated","visibilityAnimationConfig","animation","toValue","duration","finished","setIsTabBarHidden","visible","height","width","handleLayout","e","setLayout","routes","tabBarHeight","hasHorizontalLabels","tabBarBackgroundElement","tabBarBackground","styles","backgroundColor","borderTopColor","border","transform","translateY","inputRange","outputRange","position","isTabBarHidden","paddingHorizontal","Math","absoluteFill","content","focused","index","options","onPress","event","type","target","canPreventDefault","navigation","name","merge","key","onLongPress","label","accessibilityLabel","size","tabBar","left","right","bottom","borderTopWidth","elevation","flex","flexDirection"],"mappings":"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","sourcesContent":["import { MissingIcon } from '@react-navigation/elements';\nimport {\n  CommonActions,\n  NavigationContext,\n  NavigationRouteContext,\n  ParamListBase,\n  TabNavigationState,\n  useLinkBuilder,\n  useTheme,\n} from '@react-navigation/native';\nimport React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport { EdgeInsets, useSafeAreaFrame } from 'react-native-safe-area-context';\n\nimport type { BottomTabBarProps, BottomTabDescriptorMap } from '../types';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport useIsKeyboardShown from '../utils/useIsKeyboardShown';\nimport BottomTabItem from './BottomTabItem';\n\ntype Props = BottomTabBarProps & {\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 49;\nconst COMPACT_TABBAR_HEIGHT = 32;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\ntype Options = {\n  state: TabNavigationState<ParamListBase>;\n  descriptors: BottomTabDescriptorMap;\n  layout: { height: number; width: number };\n  dimensions: { height: number; width: number };\n};\n\nconst shouldUseHorizontalLabels = ({\n  state,\n  descriptors,\n  layout,\n  dimensions,\n}: Options) => {\n  const { tabBarLabelPosition } =\n    descriptors[state.routes[state.index].key].options;\n\n  if (tabBarLabelPosition) {\n    switch (tabBarLabelPosition) {\n      case 'beside-icon':\n        return true;\n      case 'below-icon':\n        return false;\n    }\n  }\n\n  if (layout.width >= 768) {\n    // Screen size matches a tablet\n    const maxTabWidth = state.routes.reduce((acc, route) => {\n      const { tabBarItemStyle } = descriptors[route.key].options;\n      const flattenedStyle = StyleSheet.flatten(tabBarItemStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          return acc + flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          return acc + flattenedStyle.maxWidth;\n        }\n      }\n\n      return acc + DEFAULT_MAX_TAB_ITEM_WIDTH;\n    }, 0);\n\n    return maxTabWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\n\nconst getPaddingBottom = (insets: EdgeInsets) =>\n  Math.max(insets.bottom - Platform.select({ ios: 4, default: 0 }), 0);\n\nexport const getTabBarHeight = ({\n  state,\n  descriptors,\n  dimensions,\n  insets,\n  style,\n  ...rest\n}: Options & {\n  insets: EdgeInsets;\n  style: Animated.WithAnimatedValue<StyleProp<ViewStyle>> | undefined;\n}) => {\n  // @ts-ignore\n  const customHeight = StyleSheet.flatten(style)?.height;\n\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n\n  const isLandscape = dimensions.width > dimensions.height;\n  const horizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n    ...rest,\n  });\n  const paddingBottom = getPaddingBottom(insets);\n\n  if (\n    Platform.OS === 'ios' &&\n    !Platform.isPad &&\n    isLandscape &&\n    horizontalLabels\n  ) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  insets,\n  style,\n}: Props) {\n  const { colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const {\n    tabBarShowLabel,\n    tabBarHideOnKeyboard = false,\n    tabBarVisibilityAnimationConfig,\n    tabBarStyle,\n    tabBarBackground,\n    tabBarActiveTintColor,\n    tabBarInactiveTintColor,\n    tabBarActiveBackgroundColor,\n    tabBarInactiveBackgroundColor,\n  } = focusedOptions;\n\n  const dimensions = useSafeAreaFrame();\n  const isKeyboardShown = useIsKeyboardShown();\n\n  const onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n\n  const shouldShowTabBar = !(tabBarHideOnKeyboard && isKeyboardShown);\n\n  const visibilityAnimationConfigRef = React.useRef(\n    tabBarVisibilityAnimationConfig\n  );\n\n  React.useEffect(() => {\n    visibilityAnimationConfigRef.current = tabBarVisibilityAnimationConfig;\n  });\n\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n\n  const [visible] = React.useState(\n    () => new Animated.Value(shouldShowTabBar ? 1 : 0)\n  );\n\n  React.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      const animation =\n        visibilityAnimationConfig?.show?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 1,\n        useNativeDriver,\n        duration: 250,\n        ...visibilityAnimationConfig?.show?.config,\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n\n      const animation =\n        visibilityAnimationConfig?.hide?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 0,\n        useNativeDriver,\n        duration: 200,\n        ...visibilityAnimationConfig?.hide?.config,\n      }).start();\n    }\n\n    return () => visible.stopAnimation();\n  }, [visible, shouldShowTabBar]);\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    onHeightChange?.(height);\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const { routes } = state;\n\n  const paddingBottom = getPaddingBottom(insets);\n  const tabBarHeight = getTabBarHeight({\n    state,\n    descriptors,\n    insets,\n    dimensions,\n    layout,\n    style: [tabBarStyle, style],\n  });\n\n  const hasHorizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n    layout,\n  });\n\n  const tabBarBackgroundElement = tabBarBackground?.();\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor:\n            tabBarBackgroundElement != null ? 'transparent' : colors.card,\n          borderTopColor: colors.border,\n        },\n        {\n          transform: [\n            {\n              translateY: visible.interpolate({\n                inputRange: [0, 1],\n                outputRange: [\n                  layout.height + paddingBottom + StyleSheet.hairlineWidth,\n                  0,\n                ],\n              }),\n            },\n          ],\n          // Absolutely position the tab bar so that the content is below it\n          // This is needed to avoid gap at bottom when the tab bar is hidden\n          position: isTabBarHidden ? 'absolute' : (null as any),\n        },\n        {\n          height: tabBarHeight,\n          paddingBottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        tabBarStyle,\n      ]}\n      pointerEvents={isTabBarHidden ? 'none' : 'auto'}\n      onLayout={handleLayout}\n    >\n      <View pointerEvents=\"none\" style={StyleSheet.absoluteFill}>\n        {tabBarBackgroundElement}\n      </View>\n      <View accessibilityRole=\"tablist\" style={styles.content}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate({ name: route.name, merge: true }),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string' && Platform.OS === 'ios'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  focused={focused}\n                  horizontal={hasHorizontalLabels}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  to={buildLink(route.name, route.params)}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={options.tabBarAllowFontScaling}\n                  activeTintColor={tabBarActiveTintColor}\n                  inactiveTintColor={tabBarInactiveTintColor}\n                  activeBackgroundColor={tabBarActiveBackgroundColor}\n                  inactiveBackgroundColor={tabBarInactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={\n                    options.tabBarIcon ??\n                    (({ color, size }) => (\n                      <MissingIcon color={color} size={size} />\n                    ))\n                  }\n                  badge={options.tabBarBadge}\n                  badgeStyle={options.tabBarBadgeStyle}\n                  label={label}\n                  showLabel={tabBarShowLabel}\n                  labelStyle={options.tabBarLabelStyle}\n                  iconStyle={options.tabBarIconStyle}\n                  style={options.tabBarItemStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}