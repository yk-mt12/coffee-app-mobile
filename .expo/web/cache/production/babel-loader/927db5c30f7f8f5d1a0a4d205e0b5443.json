{"ast":null,"code":"import{useIsFocused}from'@react-navigation/native';import React,{useEffect}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{useDispatch,useSelector}from'react-redux';import{View}from\"../components/Themed\";import{LeftWater}from\"../components/View/LeftWater\";import{RatioView}from\"../components/View/RatioVeiw\";import{RightWater}from\"../components/View/RightWater\";import{TimerView}from\"../components/View/TimerView\";import Colors from\"../constants/Colors\";import{updateAmount,updateWater}from\"../../redux/coffeeSlice\";import{changeScreen}from\"../../redux/screenSlice\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function CafeAuLaitScreen(){var isLeftWater=useSelector(function(state){return state.coffee.isWater;});var dispatch=useDispatch();var isForcused=useIsFocused();useEffect(function(){if(isForcused){dispatch(changeScreen('cafeAuLait'));dispatch(updateAmount(0));dispatch(updateWater(0));}},[isForcused]);return _jsxs(View,{style:styles.container,children:[_jsx(View,{style:[styles.containerItem],children:isLeftWater?_jsx(_Fragment,{children:_jsx(RightWater,{})}):_jsx(_Fragment,{children:_jsx(LeftWater,{})})}),_jsx(View,{style:styles.ratioContainer,children:_jsx(RatioView,{})}),_jsx(View,{children:_jsx(TimerView,{})})]});}var styles=StyleSheet.create({container:{flex:1},containerItem:{marginTop:20,padding:10,flexDirection:'row'},ratioContainer:{marginTop:39,padding:10,alignItems:'center'},dark:{color:Colors['dark'].text,backgroundColor:Colors['dark'].background},light:{color:Colors['light'].text,backgroundColor:Colors['light'].background}});","map":{"version":3,"sources":["/Users/yukim/develop/react-native/coffee-app/src/screens/CafeAuLaitScreen.tsx"],"names":["useIsFocused","React","useEffect","useDispatch","useSelector","View","LeftWater","RatioView","RightWater","TimerView","Colors","updateAmount","updateWater","changeScreen","CafeAuLaitScreen","isLeftWater","state","coffee","isWater","dispatch","isForcused","styles","container","containerItem","ratioContainer","StyleSheet","create","flex","marginTop","padding","flexDirection","alignItems","dark","color","text","backgroundColor","background","light"],"mappings":"AAAA,OAASA,YAAT,KAA6B,0BAA7B,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,iEAEA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,OAASC,IAAT,4BACA,OAASC,SAAT,oCACA,OAASC,SAAT,oCACA,OAASC,UAAT,qCACA,OAASC,SAAT,oCACA,MAAOC,CAAAA,MAAP,2BACA,OAASC,YAAT,CAAuBC,WAAvB,+BACA,OAASC,YAAT,+B,6IAEA,cAAe,SAASC,CAAAA,gBAAT,EAA4B,CACzC,GAAMC,CAAAA,WAAW,CAAGX,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACC,MAAN,CAAaC,OAAxB,EAAD,CAA/B,CACA,GAAMC,CAAAA,QAAQ,CAAGhB,WAAW,EAA5B,CACA,GAAMiB,CAAAA,UAAU,CAAGpB,YAAY,EAA/B,CAEAE,SAAS,CAAC,UAAM,CACd,GAAIkB,UAAJ,CAAgB,CACdD,QAAQ,CAACN,YAAY,CAAC,YAAD,CAAb,CAAR,CACAM,QAAQ,CAACR,YAAY,CAAC,CAAD,CAAb,CAAR,CACAQ,QAAQ,CAACP,WAAW,CAAC,CAAD,CAAZ,CAAR,CACD,CACF,CANQ,CAMN,CAACQ,UAAD,CANM,CAAT,CAQA,MACE,OAAC,IAAD,EAAM,KAAK,CAAEC,MAAM,CAACC,SAApB,WACE,KAAC,IAAD,EAAM,KAAK,CAAE,CAACD,MAAM,CAACE,aAAR,CAAb,UACGR,WAAW,CACV,yBACE,KAAC,UAAD,IADF,EADU,CAKV,yBACE,KAAC,SAAD,IADF,EANJ,EADF,CAYE,KAAC,IAAD,EAAM,KAAK,CAAEM,MAAM,CAACG,cAApB,UACE,KAAC,SAAD,IADF,EAZF,CAeE,KAAC,IAAD,WACE,KAAC,SAAD,IADF,EAfF,GADF,CAqBD,CAED,GAAMH,CAAAA,MAAM,CAAGI,UAAU,CAACC,MAAX,CAAkB,CAC/BJ,SAAS,CAAE,CACTK,IAAI,CAAE,CADG,CADoB,CAI/BJ,aAAa,CAAE,CACbK,SAAS,CAAE,EADE,CAEbC,OAAO,CAAE,EAFI,CAGbC,aAAa,CAAE,KAHF,CAJgB,CAS/BN,cAAc,CAAE,CACdI,SAAS,CAAE,EADG,CAEdC,OAAO,CAAE,EAFK,CAGdE,UAAU,CAAE,QAHE,CATe,CAc/BC,IAAI,CAAE,CACJC,KAAK,CAAEvB,MAAM,CAAC,MAAD,CAAN,CAAewB,IADlB,CAEJC,eAAe,CAAEzB,MAAM,CAAC,MAAD,CAAN,CAAe0B,UAF5B,CAdyB,CAkB/BC,KAAK,CAAE,CACLJ,KAAK,CAAEvB,MAAM,CAAC,OAAD,CAAN,CAAgBwB,IADlB,CAELC,eAAe,CAAEzB,MAAM,CAAC,OAAD,CAAN,CAAgB0B,UAF5B,CAlBwB,CAAlB,CAAf","sourcesContent":["import { useIsFocused } from '@react-navigation/native';\nimport React, { useEffect } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { View } from '../components/Themed';\nimport { LeftWater } from '../components/View/LeftWater';\nimport { RatioView } from '../components/View/RatioVeiw';\nimport { RightWater } from '../components/View/RightWater';\nimport { TimerView } from '../components/View/TimerView';\nimport Colors from '../constants/Colors';\nimport { updateAmount, updateWater } from '../../redux/coffeeSlice';\nimport { changeScreen } from '../../redux/screenSlice';\n\nexport default function CafeAuLaitScreen() {\n  const isLeftWater = useSelector((state) => state.coffee.isWater);\n  const dispatch = useDispatch();\n  const isForcused = useIsFocused();\n\n  useEffect(() => {\n    if (isForcused) {\n      dispatch(changeScreen('cafeAuLait'));\n      dispatch(updateAmount(0));\n      dispatch(updateWater(0));\n    }\n  }, [isForcused]);\n\n  return (\n    <View style={styles.container}>\n      <View style={[styles.containerItem]}>\n        {isLeftWater ? (\n          <>\n            <RightWater />\n          </>\n        ) : (\n          <>\n            <LeftWater />\n          </>\n        )}\n      </View>\n      <View style={styles.ratioContainer}>\n        <RatioView />\n      </View>\n      <View>\n        <TimerView />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  containerItem: {\n    marginTop: 20,\n    padding: 10,\n    flexDirection: 'row',\n  },\n  ratioContainer: {\n    marginTop: 39,\n    padding: 10,\n    alignItems: 'center',\n  },\n  dark: {\n    color: Colors['dark'].text,\n    backgroundColor: Colors['dark'].background,\n  },\n  light: {\n    color: Colors['light'].text,\n    backgroundColor: Colors['light'].background,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}