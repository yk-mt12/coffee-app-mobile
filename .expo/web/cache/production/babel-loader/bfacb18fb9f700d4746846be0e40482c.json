{"ast":null,"code":"import React,{useEffect}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{useDispatch,useSelector}from'react-redux';import{useIsFocused}from'@react-navigation/native';import{View}from\"../components/Themed\";import{LeftWater}from\"../components/View/LeftWater\";import{RatioView}from\"../components/View/RatioVeiw\";import{RightWater}from\"../components/View/RightWater\";import{TimerView}from\"../components/View/TimerView\";import Colors from\"../constants/Colors\";import{changeScreen}from\"../redux/screenSlice\";import{updateIceAmount,updateIceWater}from\"../redux/coffeeSlice\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function IceCoffee(){var isLeftWater=useSelector(function(state){return state.coffee.isWater;});var dispatch=useDispatch();var isForcused=useIsFocused();useEffect(function(){dispatch(changeScreen('iceCoffee'));dispatch(updateIceAmount(0));dispatch(updateIceWater(0));},[isForcused]);return _jsxs(View,{style:styles.container,children:[_jsx(View,{style:[styles.containerItem],children:isLeftWater?_jsx(_Fragment,{children:_jsx(RightWater,{})}):_jsx(_Fragment,{children:_jsx(LeftWater,{})})}),_jsx(View,{style:styles.ratioContainer,children:_jsx(RatioView,{})}),_jsx(View,{children:_jsx(TimerView,{})})]});}var styles=StyleSheet.create({container:{flex:1},containerItem:{marginTop:20,padding:10,flexDirection:'row'},ratioContainer:{marginTop:39,padding:10,alignItems:'center'},dark:{color:Colors['dark'].text,backgroundColor:Colors['dark'].background},light:{color:Colors['light'].text,backgroundColor:Colors['light'].background}});","map":{"version":3,"sources":["/Users/yukim/develop/react-native/coffee-app/screens/IceCoffeeScreen.tsx"],"names":["React","useEffect","useDispatch","useSelector","useIsFocused","View","LeftWater","RatioView","RightWater","TimerView","Colors","changeScreen","updateIceAmount","updateIceWater","IceCoffee","isLeftWater","state","coffee","isWater","dispatch","isForcused","styles","container","containerItem","ratioContainer","StyleSheet","create","flex","marginTop","padding","flexDirection","alignItems","dark","color","text","backgroundColor","background","light"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,iEAEA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,YAAT,KAA6B,0BAA7B,CAEA,OAASC,IAAT,4BACA,OAASC,SAAT,oCACA,OAASC,SAAT,oCACA,OAASC,UAAT,qCACA,OAASC,SAAT,oCACA,MAAOC,CAAAA,MAAP,2BACA,OAASC,YAAT,4BACA,OAASC,eAAT,CAA0BC,cAA1B,4B,6IAEA,cAAe,SAASC,CAAAA,SAAT,EAAqB,CAClC,GAAMC,CAAAA,WAAW,CAAGZ,WAAW,CAAC,SAACa,KAAD,QAAWA,CAAAA,KAAK,CAACC,MAAN,CAAaC,OAAxB,EAAD,CAA/B,CACA,GAAMC,CAAAA,QAAQ,CAAGjB,WAAW,EAA5B,CACA,GAAIkB,CAAAA,UAAU,CAAGhB,YAAY,EAA7B,CAKAH,SAAS,CAAC,UAAM,CACZkB,QAAQ,CAACR,YAAY,CAAC,WAAD,CAAb,CAAR,CACAQ,QAAQ,CAACP,eAAe,CAAC,CAAD,CAAhB,CAAR,CACAO,QAAQ,CAACN,cAAc,CAAC,CAAD,CAAf,CAAR,CACH,CAJQ,CAIN,CAACO,UAAD,CAJM,CAAT,CAMA,MACE,OAAC,IAAD,EAAM,KAAK,CAAEC,MAAM,CAACC,SAApB,WACE,KAAC,IAAD,EAAM,KAAK,CAAE,CAACD,MAAM,CAACE,aAAR,CAAb,UACGR,WAAW,CACV,yBACE,KAAC,UAAD,IADF,EADU,CAKV,yBACE,KAAC,SAAD,IADF,EANJ,EADF,CAYE,KAAC,IAAD,EAAM,KAAK,CAAEM,MAAM,CAACG,cAApB,UACE,KAAC,SAAD,IADF,EAZF,CAeE,KAAC,IAAD,WACE,KAAC,SAAD,IADF,EAfF,GADF,CAqBD,CAED,GAAMH,CAAAA,MAAM,CAAGI,UAAU,CAACC,MAAX,CAAkB,CAC/BJ,SAAS,CAAE,CACTK,IAAI,CAAE,CADG,CADoB,CAI/BJ,aAAa,CAAE,CACbK,SAAS,CAAE,EADE,CAEbC,OAAO,CAAE,EAFI,CAGbC,aAAa,CAAE,KAHF,CAJgB,CAS/BN,cAAc,CAAE,CACdI,SAAS,CAAE,EADG,CAEdC,OAAO,CAAE,EAFK,CAGdE,UAAU,CAAE,QAHE,CATe,CAc/BC,IAAI,CAAE,CACJC,KAAK,CAAEvB,MAAM,CAAC,MAAD,CAAN,CAAewB,IADlB,CAEJC,eAAe,CAAEzB,MAAM,CAAC,MAAD,CAAN,CAAe0B,UAF5B,CAdyB,CAkB/BC,KAAK,CAAE,CACLJ,KAAK,CAAEvB,MAAM,CAAC,OAAD,CAAN,CAAgBwB,IADlB,CAELC,eAAe,CAAEzB,MAAM,CAAC,OAAD,CAAN,CAAgB0B,UAF5B,CAlBwB,CAAlB,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useIsFocused } from '@react-navigation/native';\n\nimport { View } from '../components/Themed';\nimport { LeftWater } from '../components/View/LeftWater';\nimport { RatioView } from '../components/View/RatioVeiw';\nimport { RightWater } from '../components/View/RightWater';\nimport { TimerView } from '../components/View/TimerView';\nimport Colors from '../constants/Colors';\nimport { changeScreen } from '../redux/screenSlice';\nimport { updateIceAmount, updateIceWater } from '../redux/coffeeSlice';\n\nexport default function IceCoffee() {\n  const isLeftWater = useSelector((state) => state.coffee.isWater);\n  const dispatch = useDispatch();\n  let isForcused = useIsFocused();\n\n  // TODO:\n  // 画面遷移時ratioのデフォルト値を変更したい\n  // modalから再度画面遷移した際にもイベントが発火してしまう。\n  useEffect(() => {\n      dispatch(changeScreen('iceCoffee'));\n      dispatch(updateIceAmount(0));\n      dispatch(updateIceWater(0));\n  }, [isForcused]);\n\n  return (\n    <View style={styles.container}>\n      <View style={[styles.containerItem]}>\n        {isLeftWater ? (\n          <>\n            <RightWater />\n          </>\n        ) : (\n          <>\n            <LeftWater />\n          </>\n        )}\n      </View>\n      <View style={styles.ratioContainer}>\n        <RatioView />\n      </View>\n      <View>\n        <TimerView />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  containerItem: {\n    marginTop: 20,\n    padding: 10,\n    flexDirection: 'row',\n  },\n  ratioContainer: {\n    marginTop: 39,\n    padding: 10,\n    alignItems: 'center',\n  },\n  dark: {\n    color: Colors['dark'].text,\n    backgroundColor: Colors['dark'].background,\n  },\n  light: {\n    color: Colors['light'].text,\n    backgroundColor: Colors['light'].background,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}