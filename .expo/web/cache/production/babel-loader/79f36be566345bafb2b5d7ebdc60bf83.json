{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{memo,useState}from'react';import{Text,View}from\"../Themed\";import{Stopwatch}from'react-native-stopwatch-timer';import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Colors from\"../../constants/Colors\";import useColorScheme from\"react-native-web/dist/exports/useColorScheme\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var TimerView=memo(function(){var isDarkMode=useColorScheme()==='dark';var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isStopwatchStart=_useState2[0],setIsStopwatchStart=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),resetStopwatch=_useState4[0],setResetStopwatch=_useState4[1];var styles=StyleSheet.create({container:{marginTop:15},sectionStyle:{},button:{flexDirection:'row',justifyContent:'space-between',marginTop:10,marginHorizontal:40},buttonText:{fontSize:20,color:isDarkMode?Colors['timerResetButton'].dText:Colors['timerResetButton'].wText},dark:{color:Colors['inputView'].wText},light:{color:Colors['inputView'].dText},startButton:{width:80,height:80,justifyContent:'center',alignItems:'center',padding:10,borderRadius:100,backgroundColor:isDarkMode?Colors['timerButtonDark'].startBackground:Colors['timerButtonLight'].startBackground},startText:{color:isDarkMode?Colors['timerButtonDark'].startText:Colors['timerButtonLight'].startText},stopButton:{backgroundColor:isDarkMode?Colors['timerButtonDark'].stopBackground:Colors['timerButtonLight'].stopBackground,width:80,height:80,justifyContent:'center',alignItems:'center',padding:10,borderRadius:100},stopText:{color:isDarkMode?Colors['timerButtonDark'].stopText:Colors['timerButtonLight'].stopText},resetButton:{backgroundColor:Colors['timerResetButton'].background,width:80,height:80,justifyContent:'center',alignItems:'center',padding:10,borderRadius:100}});var options={container:{padding:20,borderRadius:4,width:'98%',alignItems:'center'},text:{fontSize:84,fontWeight:'300',color:isDarkMode?Colors['dark'].text:Colors['light'].text,margin:20}};return _jsx(_Fragment,{children:_jsxs(View,{style:styles.container,children:[_jsx(View,{style:[styles.sectionStyle,isDarkMode?styles.dark:styles.light],children:_jsx(Stopwatch,{start:isStopwatchStart,reset:resetStopwatch,options:options,style:isDarkMode?styles.dark:styles.light})}),_jsxs(View,{style:[styles.button],children:[_jsx(TouchableHighlight,{onPress:function onPress(){setIsStopwatchStart(false);setResetStopwatch(true);},style:[styles.resetButton],children:_jsx(Text,{style:[styles.buttonText],children:\"RESET\"})}),_jsx(TouchableHighlight,{onPress:function onPress(){setIsStopwatchStart(!isStopwatchStart);setResetStopwatch(false);},style:[isStopwatchStart?styles.stopButton:styles.startButton],children:_jsx(Text,{style:[styles.buttonText,isStopwatchStart?styles.stopText:styles.startText],children:!isStopwatchStart?'START':'STOP'})})]})]})});});","map":{"version":3,"sources":["/Users/yukim/develop/react-native/coffee-app/components/View/TimerView.tsx"],"names":["React","memo","useState","Text","View","Stopwatch","Colors","TimerView","isDarkMode","useColorScheme","isStopwatchStart","setIsStopwatchStart","resetStopwatch","setResetStopwatch","styles","StyleSheet","create","container","marginTop","sectionStyle","button","flexDirection","justifyContent","marginHorizontal","buttonText","fontSize","color","dText","wText","dark","light","startButton","width","height","alignItems","padding","borderRadius","backgroundColor","startBackground","startText","stopButton","stopBackground","stopText","resetButton","background","options","text","fontWeight","margin"],"mappings":"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","sourcesContent":["import React, { memo, useEffect, useState } from 'react';\nimport { Text, View } from '../Themed';\nimport { Stopwatch } from 'react-native-stopwatch-timer';\nimport { TouchableHighlight, StyleSheet } from 'react-native';\nimport Colors from '../../constants/Colors';\nimport { useColorScheme } from 'react-native';\n\nexport const TimerView = memo(() => {\n  const isDarkMode = useColorScheme() === 'dark';\n  const [isStopwatchStart, setIsStopwatchStart] = useState(false);\n  const [resetStopwatch, setResetStopwatch] = useState(false);\n\n  const styles = StyleSheet.create({\n    container: {\n      marginTop: 15,\n    },\n    sectionStyle: {},\n    button: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      marginTop: 10,\n      marginHorizontal: 40,\n    },\n    buttonText: {\n      fontSize: 20,\n      color: isDarkMode ? Colors['timerResetButton'].\n      dText : Colors['timerResetButton'].wText,\n    },\n    dark: {\n      color: Colors['inputView'].wText,\n      // backgroundColor: Colors['inputView'].wBackground,\n    },\n    light: {\n      color: Colors['inputView'].dText,\n      // backgroundColor: Colors['inputView'].wBackground,\n    },\n    startButton: {\n      width: 80,\n      height: 80,\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 10,\n      borderRadius: 100,\n\n      backgroundColor: isDarkMode\n        ? Colors['timerButtonDark'].startBackground\n        : Colors['timerButtonLight'].startBackground,\n    },\n    startText: {\n      color: isDarkMode\n        ? Colors['timerButtonDark'].startText\n        : Colors['timerButtonLight'].startText,\n    },\n    stopButton: {\n      backgroundColor: isDarkMode\n        ? Colors['timerButtonDark'].stopBackground\n        : Colors['timerButtonLight'].stopBackground,\n      width: 80,\n      height: 80,\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 10,\n      borderRadius: 100,\n    },\n    stopText: {\n      color: isDarkMode ? Colors['timerButtonDark'].stopText : Colors['timerButtonLight'].stopText,\n    },\n    resetButton: {\n      backgroundColor: Colors['timerResetButton'].background,\n      width: 80,\n      height: 80,\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 10,\n      borderRadius: 100,\n    },\n  });\n\n  const options = {\n    container: {\n      padding: 20,\n      borderRadius: 4,\n      width: '98%',\n      alignItems: 'center',\n    },\n    text: {\n      fontSize: 84,\n      fontWeight: '300',\n      color: isDarkMode ? Colors['dark'].text : Colors['light'].text,\n      margin: 20,\n    },\n  };\n\n  return (\n    <>\n      <View style={styles.container}>\n        <View style={[styles.sectionStyle, isDarkMode ? styles.dark : styles.light]}>\n          <Stopwatch\n            start={isStopwatchStart}\n            reset={resetStopwatch}\n            options={options}\n            style={isDarkMode ? styles.dark : styles.light}\n          />\n        </View>\n        <View style={[styles.button]}>\n          <TouchableHighlight\n            onPress={() => {\n              setIsStopwatchStart(false);\n              setResetStopwatch(true);\n            }}\n            style={[styles.resetButton]}>\n            <Text style={[styles.buttonText]}>RESET</Text>\n          </TouchableHighlight>\n          <TouchableHighlight\n            onPress={() => {\n              setIsStopwatchStart(!isStopwatchStart);\n              setResetStopwatch(false);\n            }}\n            style={[isStopwatchStart ? styles.stopButton : styles.startButton]}>\n            <Text\n              style={[styles.buttonText, isStopwatchStart ? styles.stopText : styles.startText]}>\n              {!isStopwatchStart ? 'START' : 'STOP'}\n            </Text>\n          </TouchableHighlight>\n        </View>\n      </View>\n    </>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}