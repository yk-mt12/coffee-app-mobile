{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import React,{Component}from'react';import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import PropTypes from'prop-types';import{formatTimeString}from\"./utils\";import{jsx as _jsx}from\"react/jsx-runtime\";var Timer=function(_Component){_inherits(Timer,_Component);var _super=_createSuper(Timer);function Timer(props){var _this;_classCallCheck(this,Timer);_this=_super.call(this,props);_this.state={started:false,remainingTime:props.totalDuration};_this.start=_this.start.bind(_assertThisInitialized(_this));_this.stop=_this.stop.bind(_assertThisInitialized(_this));_this.reset=_this.reset.bind(_assertThisInitialized(_this));_this.formatTime=_this.formatTime.bind(_assertThisInitialized(_this));var width=props.msecs?220:150;_this.defaultStyles={container:{backgroundColor:'#000',padding:5,borderRadius:5,width:width},text:{fontSize:30,color:'#FFF',marginLeft:7}};return _this;}_createClass(Timer,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.props.start){this.start();}}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(newProps){if(newProps.start){this.start();}else{this.stop();}if(newProps.reset){this.reset(newProps.totalDuration);}}},{key:\"start\",value:function start(){var _this2=this;var handleFinish=this.props.handleFinish?this.props.handleFinish:function(){return alert(\"Timer Finished\");};var endTime=new Date().getTime()+this.state.remainingTime;this.interval=setInterval(function(){var remaining=endTime-new Date();if(remaining<=1000){_this2.setState({remainingTime:0});_this2.stop();handleFinish();return;}_this2.setState({remainingTime:remaining});},1);}},{key:\"stop\",value:function stop(){clearInterval(this.interval);}},{key:\"reset\",value:function reset(newDuration){this.setState({remainingTime:this.props.totalDuration!==newDuration?newDuration:this.props.totalDuration});}},{key:\"formatTime\",value:function formatTime(){var _this$props=this.props,getTime=_this$props.getTime,getMsecs=_this$props.getMsecs,msecs=_this$props.msecs;var now=this.state.remainingTime;var formatted=formatTimeString(now,msecs);if(typeof getTime===\"function\"){getTime(formatted);}if(typeof getMsecs===\"function\"){getMsecs(now);}return formatted;}},{key:\"render\",value:function render(){var styles=this.props.options?this.props.options:this.defaultStyles;return _jsx(View,{style:styles.container,children:_jsx(Text,{style:styles.text,children:this.formatTime()})});}}]);return Timer;}(Component);Timer.propTypes={start:PropTypes.bool,reset:PropTypes.bool,msecs:PropTypes.bool,options:PropTypes.object,handleFinish:PropTypes.func,totalDuration:PropTypes.number,getTime:PropTypes.func,getMsecs:PropTypes.func};export default Timer;","map":{"version":3,"sources":["/Users/yukim/programming/my-app/coffee-app-mobile/node_modules/react-native-stopwatch-timer/lib/timer.js"],"names":["React","Component","PropTypes","formatTimeString","Timer","props","state","started","remainingTime","totalDuration","start","bind","stop","reset","formatTime","width","msecs","defaultStyles","container","backgroundColor","padding","borderRadius","text","fontSize","color","marginLeft","newProps","handleFinish","alert","endTime","Date","getTime","interval","setInterval","remaining","setState","clearInterval","newDuration","getMsecs","now","formatted","styles","options","propTypes","bool","object","func","number"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Text, View, StyleSheet} from 'react-native';\nimport PropTypes from 'prop-types';\nimport { formatTimeString } from './utils';\n\nclass Timer extends Component {\n  static propTypes = {\n    start: PropTypes.bool,\n    reset: PropTypes.bool,\n    msecs: PropTypes.bool,\n    options: PropTypes.object,\n    handleFinish: PropTypes.func,\n    totalDuration: PropTypes.number,\n    getTime: PropTypes.func,\n    getMsecs: PropTypes.func,\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      started: false,\n      remainingTime: props.totalDuration,\n    };\n    this.start = this.start.bind(this);\n    this.stop = this.stop.bind(this);\n    this.reset = this.reset.bind(this);\n    this.formatTime = this.formatTime.bind(this);\n    const width = props.msecs ? 220 : 150;\n    this.defaultStyles = {\n      container: {\n        backgroundColor: '#000',\n        padding: 5,\n        borderRadius: 5,\n        width: width,\n      },\n      text: {\n        fontSize: 30,\n        color: '#FFF',\n        marginLeft: 7,\n      }\n    };\n  }\n\n  componentDidMount() {\n    if(this.props.start) {\n      this.start();\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n\n    if(newProps.start) {\n      this.start();\n    } else {\n      this.stop();\n    }\n    if(newProps.reset) {\n      this.reset(newProps.totalDuration);\n    }\n  }\n\n  start() {\n    const handleFinish = this.props.handleFinish ? this.props.handleFinish : () => alert(\"Timer Finished\");\n    const endTime = new Date().getTime() + this.state.remainingTime;\n    this.interval = setInterval(() => {\n      const remaining = endTime - new Date();\n      if(remaining <= 1000) {\n        this.setState({remainingTime: 0});\n        this.stop();\n        handleFinish();\n        return;\n      }\n      this.setState({remainingTime: remaining});\n    }, 1);\n  }\n\n  stop() {\n    clearInterval(this.interval);\n  }\n\n  reset(newDuration) {\n    this.setState({\n      remainingTime: \n        this.props.totalDuration !== newDuration ? \n          newDuration : \n          this.props.totalDuration\n      });\n  }\n\n  formatTime() {\n    const { getTime, getMsecs, msecs } = this.props;\n    const now = this.state.remainingTime;\n    const formatted = formatTimeString(now, msecs);\n    if (typeof getTime === \"function\") {\n      getTime(formatted);\n    }\n    if (typeof getMsecs === \"function\") {\n      getMsecs(now)\n    }\n    return formatted;\n  }\n\n  render() {\n\n    const styles = this.props.options ? this.props.options : this.defaultStyles;\n\n    return(\n      <View style={styles.container}>\n        <Text style={styles.text}>{this.formatTime()}</Text>\n      </View>\n    );\n  }\n}\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}