{"ast":null,"code":"import _extends2 from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"id\",\"initialRouteName\",\"backBehavior\",\"children\",\"screenListeners\",\"screenOptions\",\"sceneContainerStyle\"],_excluded2=[\"lazy\",\"tabBarOptions\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import{createNavigatorFactory,TabRouter,useNavigationBuilder}from'@react-navigation/native';import*as React from'react';import warnOnce from'warn-once';import BottomTabView from\"../views/BottomTabView\";function BottomTabNavigator(_ref){var id=_ref.id,initialRouteName=_ref.initialRouteName,backBehavior=_ref.backBehavior,children=_ref.children,screenListeners=_ref.screenListeners,screenOptions=_ref.screenOptions,sceneContainerStyle=_ref.sceneContainerStyle,restWithDeprecated=_objectWithoutProperties(_ref,_excluded);var lazy=restWithDeprecated.lazy,tabBarOptions=restWithDeprecated.tabBarOptions,rest=_objectWithoutProperties(restWithDeprecated,_excluded2);var defaultScreenOptions={};if(tabBarOptions){var _tabBarOptions$labelP;_extends2(defaultScreenOptions,{tabBarHideOnKeyboard:tabBarOptions.keyboardHidesTabBar,tabBarActiveTintColor:tabBarOptions.activeTintColor,tabBarInactiveTintColor:tabBarOptions.inactiveTintColor,tabBarActiveBackgroundColor:tabBarOptions.activeBackgroundColor,tabBarInactiveBackgroundColor:tabBarOptions.inactiveBackgroundColor,tabBarAllowFontScaling:tabBarOptions.allowFontScaling,tabBarShowLabel:tabBarOptions.showLabel,tabBarLabelStyle:tabBarOptions.labelStyle,tabBarIconStyle:tabBarOptions.iconStyle,tabBarItemStyle:tabBarOptions.tabStyle,tabBarLabelPosition:(_tabBarOptions$labelP=tabBarOptions.labelPosition)!==null&&_tabBarOptions$labelP!==void 0?_tabBarOptions$labelP:tabBarOptions.adaptive===false?'below-icon':undefined,tabBarStyle:[{display:tabBarOptions.tabBarVisible?'none':'flex'},defaultScreenOptions.tabBarStyle]});Object.keys(defaultScreenOptions).forEach(function(key){if(defaultScreenOptions[key]===undefined){delete defaultScreenOptions[key];}});warnOnce(tabBarOptions,\"Bottom Tab Navigator: 'tabBarOptions' is deprecated. Migrate the options to 'screenOptions' instead.\\n\\nPlace the following in 'screenOptions' in your code to keep current behavior:\\n\\n\"+JSON.stringify(defaultScreenOptions,null,2)+\"\\n\\nSee https://reactnavigation.org/docs/bottom-tab-navigator#options for more details.\");}if(typeof lazy==='boolean'){defaultScreenOptions.lazy=lazy;warnOnce(true,\"Bottom Tab Navigator: 'lazy' in props is deprecated. Move it to 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/bottom-tab-navigator/#lazy for more details.\");}var _useNavigationBuilder=useNavigationBuilder(TabRouter,{id:id,initialRouteName:initialRouteName,backBehavior:backBehavior,children:children,screenListeners:screenListeners,screenOptions:screenOptions,defaultScreenOptions:defaultScreenOptions}),state=_useNavigationBuilder.state,descriptors=_useNavigationBuilder.descriptors,navigation=_useNavigationBuilder.navigation,NavigationContent=_useNavigationBuilder.NavigationContent;return React.createElement(NavigationContent,null,React.createElement(BottomTabView,_extends({},rest,{state:state,navigation:navigation,descriptors:descriptors,sceneContainerStyle:sceneContainerStyle})));}export default createNavigatorFactory(BottomTabNavigator);","map":{"version":3,"sources":["createBottomTabNavigator.tsx"],"names":["restWithDeprecated","rest","defaultScreenOptions","Object","tabBarHideOnKeyboard","tabBarOptions","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarActiveBackgroundColor","tabBarInactiveBackgroundColor","tabBarAllowFontScaling","tabBarShowLabel","tabBarLabelStyle","tabBarIconStyle","tabBarItemStyle","tabBarLabelPosition","tabBarStyle","display","key","warnOnce","JSON","NavigationContent","useNavigationBuilder","id","initialRouteName","backBehavior","children","screenListeners","screenOptions","sceneContainerStyle","createNavigatorFactory"],"mappings":"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","sourcesContent":["import {\n  createNavigatorFactory,\n  DefaultNavigatorOptions,\n  ParamListBase,\n  TabActionHelpers,\n  TabNavigationState,\n  TabRouter,\n  TabRouterOptions,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport warnOnce from 'warn-once';\n\nimport type {\n  BottomTabNavigationConfig,\n  BottomTabNavigationEventMap,\n  BottomTabNavigationOptions,\n} from '../types';\nimport BottomTabView from '../views/BottomTabView';\n\ntype Props = DefaultNavigatorOptions<\n  ParamListBase,\n  TabNavigationState<ParamListBase>,\n  BottomTabNavigationOptions,\n  BottomTabNavigationEventMap\n> &\n  TabRouterOptions &\n  BottomTabNavigationConfig;\n\nfunction BottomTabNavigator({\n  id,\n  initialRouteName,\n  backBehavior,\n  children,\n  screenListeners,\n  screenOptions,\n  sceneContainerStyle,\n  ...restWithDeprecated\n}: Props) {\n  const {\n    // @ts-expect-error: lazy is deprecated\n    lazy,\n    // @ts-expect-error: tabBarOptions is deprecated\n    tabBarOptions,\n    ...rest\n  } = restWithDeprecated;\n\n  let defaultScreenOptions: BottomTabNavigationOptions = {};\n\n  if (tabBarOptions) {\n    Object.assign(defaultScreenOptions, {\n      tabBarHideOnKeyboard: tabBarOptions.keyboardHidesTabBar,\n      tabBarActiveTintColor: tabBarOptions.activeTintColor,\n      tabBarInactiveTintColor: tabBarOptions.inactiveTintColor,\n      tabBarActiveBackgroundColor: tabBarOptions.activeBackgroundColor,\n      tabBarInactiveBackgroundColor: tabBarOptions.inactiveBackgroundColor,\n      tabBarAllowFontScaling: tabBarOptions.allowFontScaling,\n      tabBarShowLabel: tabBarOptions.showLabel,\n      tabBarLabelStyle: tabBarOptions.labelStyle,\n      tabBarIconStyle: tabBarOptions.iconStyle,\n      tabBarItemStyle: tabBarOptions.tabStyle,\n      tabBarLabelPosition:\n        tabBarOptions.labelPosition ??\n        (tabBarOptions.adaptive === false ? 'below-icon' : undefined),\n      tabBarStyle: [\n        { display: tabBarOptions.tabBarVisible ? 'none' : 'flex' },\n        defaultScreenOptions.tabBarStyle,\n      ],\n    });\n\n    (\n      Object.keys(defaultScreenOptions) as (keyof BottomTabNavigationOptions)[]\n    ).forEach((key) => {\n      if (defaultScreenOptions[key] === undefined) {\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete defaultScreenOptions[key];\n      }\n    });\n\n    warnOnce(\n      tabBarOptions,\n      `Bottom Tab Navigator: 'tabBarOptions' is deprecated. Migrate the options to 'screenOptions' instead.\\n\\nPlace the following in 'screenOptions' in your code to keep current behavior:\\n\\n${JSON.stringify(\n        defaultScreenOptions,\n        null,\n        2\n      )}\\n\\nSee https://reactnavigation.org/docs/bottom-tab-navigator#options for more details.`\n    );\n  }\n\n  if (typeof lazy === 'boolean') {\n    defaultScreenOptions.lazy = lazy;\n\n    warnOnce(\n      true,\n      `Bottom Tab Navigator: 'lazy' in props is deprecated. Move it to 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/bottom-tab-navigator/#lazy for more details.`\n    );\n  }\n\n  const { state, descriptors, navigation, NavigationContent } =\n    useNavigationBuilder<\n      TabNavigationState<ParamListBase>,\n      TabRouterOptions,\n      TabActionHelpers<ParamListBase>,\n      BottomTabNavigationOptions,\n      BottomTabNavigationEventMap\n    >(TabRouter, {\n      id,\n      initialRouteName,\n      backBehavior,\n      children,\n      screenListeners,\n      screenOptions,\n      defaultScreenOptions,\n    });\n\n  return (\n    <NavigationContent>\n      <BottomTabView\n        {...rest}\n        state={state}\n        navigation={navigation}\n        descriptors={descriptors}\n        sceneContainerStyle={sceneContainerStyle}\n      />\n    </NavigationContent>\n  );\n}\n\nexport default createNavigatorFactory<\n  TabNavigationState<ParamListBase>,\n  BottomTabNavigationOptions,\n  BottomTabNavigationEventMap,\n  typeof BottomTabNavigator\n>(BottomTabNavigator);\n"]},"metadata":{},"sourceType":"module"}