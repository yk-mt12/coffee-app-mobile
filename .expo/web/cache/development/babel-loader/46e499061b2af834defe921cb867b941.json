{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { memo, useState } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\nimport { useDispatch } from 'react-redux';\nimport { Text, View } from \"../../components/Themed\";\nimport { updateAmount, updateRatio, updateWater } from \"../../redux/coffeeSlice\";\nimport Colors from \"../../constants/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var RatioInput = memo(function (props) {\n  var dispatch = useDispatch();\n  var title = props.title;\n  var isDarkMode = useColorScheme() === 'dark';\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      ratio = _useState2[0],\n      setRatio = _useState2[1];\n\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: title\n    }), _jsx(TextInput, {\n      style: [styles.input, isDarkMode ? styles.dark : styles.light],\n      placeholder: \"input\",\n      maxLength: 2,\n      returnKeyType: \"done\",\n      keyboardType: \"numbers-and-punctuation\",\n      onChangeText: function onChangeText(newText) {\n        return setRatio(Number(newText));\n      },\n      onSubmitEditing: function onSubmitEditing() {\n        dispatch(updateRatio(ratio));\n        dispatch(updateWater(0));\n        dispatch(updateAmount(0));\n      }\n    })]\n  });\n});\nvar styles = StyleSheet.create({\n  title: {\n    fontSize: 20,\n    marginBottom: 5\n  },\n  input: {\n    padding: 10,\n    marginTop: 8,\n    borderRadius: 10,\n    width: '95%',\n    fontSize: 20\n  },\n  dark: {\n    color: Colors['inputView'].wText,\n    backgroundColor: Colors['inputView'].wBackground\n  },\n  light: {\n    color: Colors['inputView'].dText,\n    backgroundColor: Colors['inputView'].wBackground\n  }\n});","map":{"version":3,"sources":["/Users/yukim/develop/react-native/coffee-app/components/Input/RatioInput.tsx"],"names":["memo","useState","useDispatch","Text","View","updateAmount","updateRatio","updateWater","Colors","RatioInput","props","dispatch","title","isDarkMode","useColorScheme","ratio","setRatio","styles","input","dark","light","newText","Number","StyleSheet","create","fontSize","marginBottom","padding","marginTop","borderRadius","width","color","wText","backgroundColor","wBackground","dText"],"mappings":";AAAA,SAASA,IAAT,EAAeC,QAAf,QAA+B,OAA/B;;;;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,IAAT,EAAeC,IAAf;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,WAApC;AAEA,OAAOC,MAAP;;;AAEA,OAAO,IAAMC,UAAU,GAAGT,IAAI,CAAC,UAACU,KAAD,EAA2B;AACxD,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,MAAQU,KAAR,GAAkBF,KAAlB,CAAQE,KAAR;AACA,MAAMC,UAAU,GAAGC,cAAc,OAAO,MAAxC;;AACA,kBAA0Bb,QAAQ,CAAS,CAAT,CAAlC;AAAA;AAAA,MAAOc,KAAP;AAAA,MAAcC,QAAd;;AAEA,SACE,MAAC,IAAD;AAAA,eACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACL,KAApB;AAAA,gBAA4BA;AAA5B,MADF,EAEE,KAAC,SAAD;AACE,MAAA,KAAK,EAAE,CAACK,MAAM,CAACC,KAAR,EAAeL,UAAU,GAAGI,MAAM,CAACE,IAAV,GAAiBF,MAAM,CAACG,KAAjD,CADT;AAEE,MAAA,WAAW,EAAC,OAFd;AAGE,MAAA,SAAS,EAAE,CAHb;AAIE,MAAA,aAAa,EAAC,MAJhB;AAKE,MAAA,YAAY,EAAC,yBALf;AAOE,MAAA,YAAY,EAAE,sBAACC,OAAD;AAAA,eAAaL,QAAQ,CAACM,MAAM,CAACD,OAAD,CAAP,CAArB;AAAA,OAPhB;AAQE,MAAA,eAAe,EAAE,2BAAM;AACrBV,QAAAA,QAAQ,CAACL,WAAW,CAACS,KAAD,CAAZ,CAAR;AACAJ,QAAAA,QAAQ,CAACJ,WAAW,CAAC,CAAD,CAAZ,CAAR;AACAI,QAAAA,QAAQ,CAACN,YAAY,CAAC,CAAD,CAAb,CAAR;AAED;AAbH,MAFF;AAAA,IADF;AAoBD,CA1B6B,CAAvB;AA4BP,IAAMY,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BZ,EAAAA,KAAK,EAAE;AACLa,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,YAAY,EAAE;AAFT,GADwB;AAK/BR,EAAAA,KAAK,EAAE;AACLS,IAAAA,OAAO,EAAE,EADJ;AAELC,IAAAA,SAAS,EAAE,CAFN;AAGLC,IAAAA,YAAY,EAAE,EAHT;AAILC,IAAAA,KAAK,EAAE,KAJF;AAKLL,IAAAA,QAAQ,EAAE;AALL,GALwB;AAY/BN,EAAAA,IAAI,EAAE;AACJY,IAAAA,KAAK,EAAEvB,MAAM,CAAC,WAAD,CAAN,CAAoBwB,KADvB;AAEJC,IAAAA,eAAe,EAAEzB,MAAM,CAAC,WAAD,CAAN,CAAoB0B;AAFjC,GAZyB;AAgB/Bd,EAAAA,KAAK,EAAE;AACLW,IAAAA,KAAK,EAAEvB,MAAM,CAAC,WAAD,CAAN,CAAoB2B,KADtB;AAELF,IAAAA,eAAe,EAAEzB,MAAM,CAAC,WAAD,CAAN,CAAoB0B;AAFhC;AAhBwB,CAAlB,CAAf","sourcesContent":["import { memo, useState } from 'react';\nimport { TextInput, StyleSheet, useColorScheme } from 'react-native';\nimport { useDispatch } from 'react-redux';\n\nimport { Text, View } from '../../components/Themed';\nimport { updateAmount, updateRatio, updateWater } from '../../redux/coffeeSlice';\nimport { RatioInputType } from '../../types/type';\nimport Colors from '../../constants/Colors';\n\nexport const RatioInput = memo((props: RatioInputType) => {\n  const dispatch = useDispatch();\n  const { title } = props;\n  const isDarkMode = useColorScheme() === 'dark';\n  const [ratio, setRatio] = useState<number>(0);\n\n  return (\n    <View>\n      <Text style={styles.title}>{title}</Text>\n      <TextInput\n        style={[styles.input, isDarkMode ? styles.dark : styles.light]}\n        placeholder=\"input\"\n        maxLength={2}\n        returnKeyType=\"done\"\n        keyboardType=\"numbers-and-punctuation\"\n        // textAlign=\"center\"\n        onChangeText={(newText) => setRatio(Number(newText))}\n        onSubmitEditing={() => {\n          dispatch(updateRatio(ratio));\n          dispatch(updateWater(0));\n          dispatch(updateAmount(0));\n\n        }}\n      />\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 20,\n    marginBottom: 5,\n  },\n  input: {\n    padding: 10,\n    marginTop: 8,\n    borderRadius: 10,\n    width: '95%',\n    fontSize: 20,\n  },\n  dark: {\n    color: Colors['inputView'].wText,\n    backgroundColor: Colors['inputView'].wBackground,\n  },\n  light: {\n    color: Colors['inputView'].dText,\n    backgroundColor: Colors['inputView'].wBackground,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}