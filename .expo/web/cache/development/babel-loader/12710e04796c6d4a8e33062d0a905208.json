{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { memo, useState } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport Colors from \"../../constants/Colors\";\nimport { calculateWater, updateAmount, calculateIceCoffeeWater } from \"../../redux/coffeeSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var AmountInput = memo(function () {\n  var dispatch = useDispatch();\n  var isDarkMode = useColorScheme() === 'dark';\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      amount = _useState2[0],\n      setAmount = _useState2[1];\n\n  var nowScreen = useSelector(function (state) {\n    return state.screen.nowScreen;\n  });\n\n  function changeAmountInput() {\n    switch (nowScreen) {\n      case 'normal':\n        dispatch(calculateWater(amount));\n\n      case 'iceCoffee':\n        dispatch(calculateIceCoffeeWater(amount));\n\n      default:\n        dispatch(calculateWater(amount));\n    }\n  }\n\n  return _jsx(TextInput, {\n    style: [styles.input, isDarkMode ? styles.dark : styles.light],\n    placeholder: \"input\",\n    maxLength: 3,\n    returnKeyType: \"done\",\n    keyboardType: \"numbers-and-punctuation\",\n    textAlign: \"center\",\n    onChangeText: function onChangeText(newText) {\n      return setAmount(Number(newText));\n    },\n    onSubmitEditing: function onSubmitEditing() {\n      dispatch(updateAmount(amount));\n      changeAmountInput();\n    }\n  });\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  input: {\n    padding: 8,\n    marginTop: 8,\n    marginRight: 10,\n    borderRadius: 10,\n    width: 100,\n    height: 40,\n    fontSize: 25,\n    textAlign: 'center'\n  },\n  dark: {\n    color: Colors['inputView'].wText,\n    backgroundColor: Colors['inputView'].wBackground\n  },\n  light: {\n    color: Colors['inputView'].dText,\n    backgroundColor: Colors['inputView'].wBackground\n  }\n});","map":{"version":3,"sources":["/Users/yukim/develop/react-native/coffee-app/components/Input/AmountInput.tsx"],"names":["memo","useState","useDispatch","useSelector","Colors","calculateWater","updateAmount","calculateIceCoffeeWater","AmountInput","dispatch","isDarkMode","useColorScheme","amount","setAmount","nowScreen","state","screen","changeAmountInput","styles","input","dark","light","newText","Number","StyleSheet","create","container","flex","padding","marginTop","marginRight","borderRadius","width","height","fontSize","textAlign","color","wText","backgroundColor","wBackground","dText"],"mappings":";AAAA,SAASA,IAAT,EAAeC,QAAf,QAA+B,OAA/B;;;;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP;AAEA,SACEC,cADF,EAEEC,YAFF,EAIEC,uBAJF;;AAOA,OAAO,IAAMC,WAAW,GAAGR,IAAI,CAAC,YAAM;AACpC,MAAMS,QAAQ,GAAGP,WAAW,EAA5B;AACA,MAAMQ,UAAU,GAAGC,cAAc,OAAO,MAAxC;;AACA,kBAA4BV,QAAQ,CAAS,CAAT,CAApC;AAAA;AAAA,MAAOW,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAMC,SAAS,GAAGX,WAAW,CAAC,UAACY,KAAD;AAAA,WAAWA,KAAK,CAACC,MAAN,CAAaF,SAAxB;AAAA,GAAD,CAA7B;;AAEA,WAASG,iBAAT,GAA6B;AAC3B,YAAQH,SAAR;AACE,WAAK,QAAL;AACEL,QAAAA,QAAQ,CAACJ,cAAc,CAACO,MAAD,CAAf,CAAR;;AACF,WAAK,WAAL;AACEH,QAAAA,QAAQ,CAACF,uBAAuB,CAACK,MAAD,CAAxB,CAAR;;AACF;AACEH,QAAAA,QAAQ,CAACJ,cAAc,CAACO,MAAD,CAAf,CAAR;AANJ;AAQD;;AAED,SACE,KAAC,SAAD;AACE,IAAA,KAAK,EAAE,CAACM,MAAM,CAACC,KAAR,EAAeT,UAAU,GAAGQ,MAAM,CAACE,IAAV,GAAiBF,MAAM,CAACG,KAAjD,CADT;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,SAAS,EAAE,CAHb;AAIE,IAAA,aAAa,EAAC,MAJhB;AAKE,IAAA,YAAY,EAAC,yBALf;AAME,IAAA,SAAS,EAAC,QANZ;AAOE,IAAA,YAAY,EAAE,sBAACC,OAAD;AAAA,aAAaT,SAAS,CAACU,MAAM,CAACD,OAAD,CAAP,CAAtB;AAAA,KAPhB;AAQE,IAAA,eAAe,EAAE,2BAAM;AACrBb,MAAAA,QAAQ,CAACH,YAAY,CAACM,MAAD,CAAb,CAAR;AACAK,MAAAA,iBAAiB;AAClB;AAXH,IADF;AAeD,CAhC8B,CAAxB;AAkCP,IAAMC,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE;AADG,GADoB;AAI/BR,EAAAA,KAAK,EAAE;AACLS,IAAAA,OAAO,EAAE,CADJ;AAELC,IAAAA,SAAS,EAAE,CAFN;AAGLC,IAAAA,WAAW,EAAE,EAHR;AAILC,IAAAA,YAAY,EAAE,EAJT;AAKLC,IAAAA,KAAK,EAAE,GALF;AAMLC,IAAAA,MAAM,EAAE,EANH;AAOLC,IAAAA,QAAQ,EAAE,EAPL;AAQLC,IAAAA,SAAS,EAAE;AARN,GAJwB;AAc/Bf,EAAAA,IAAI,EAAE;AACJgB,IAAAA,KAAK,EAAEhC,MAAM,CAAC,WAAD,CAAN,CAAoBiC,KADvB;AAEJC,IAAAA,eAAe,EAAElC,MAAM,CAAC,WAAD,CAAN,CAAoBmC;AAFjC,GAdyB;AAkB/BlB,EAAAA,KAAK,EAAE;AACLe,IAAAA,KAAK,EAAEhC,MAAM,CAAC,WAAD,CAAN,CAAoBoC,KADtB;AAELF,IAAAA,eAAe,EAAElC,MAAM,CAAC,WAAD,CAAN,CAAoBmC;AAFhC;AAlBwB,CAAlB,CAAf","sourcesContent":["import { memo, useState } from 'react';\nimport { TextInput, StyleSheet, useColorScheme, SafeAreaView, Switch } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Colors from '../../constants/Colors';\n\nimport {\n  calculateWater,\n  updateAmount,\n  calculateIceCoffeeAmount,\n  calculateIceCoffeeWater,\n} from '../../redux/coffeeSlice';\n\nexport const AmountInput = memo(() => {\n  const dispatch = useDispatch();\n  const isDarkMode = useColorScheme() === 'dark';\n  const [amount, setAmount] = useState<number>(0);\n  const nowScreen = useSelector((state) => state.screen.nowScreen);\n\n  function changeAmountInput() {\n    switch (nowScreen) {\n      case 'normal':\n        dispatch(calculateWater(amount));\n      case 'iceCoffee':\n        dispatch(calculateIceCoffeeWater(amount));\n      default:\n        dispatch(calculateWater(amount));\n    }\n  }\n\n  return (\n    <TextInput\n      style={[styles.input, isDarkMode ? styles.dark : styles.light]}\n      placeholder=\"input\"\n      maxLength={3}\n      returnKeyType=\"done\"\n      keyboardType=\"numbers-and-punctuation\"\n      textAlign=\"center\"\n      onChangeText={(newText) => setAmount(Number(newText))}\n      onSubmitEditing={() => {\n        dispatch(updateAmount(amount));\n        changeAmountInput();\n      }}\n    />\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  input: {\n    padding: 8,\n    marginTop: 8,\n    marginRight: 10,\n    borderRadius: 10,\n    width: 100,\n    height: 40,\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  dark: {\n    color: Colors['inputView'].wText,\n    backgroundColor: Colors['inputView'].wBackground,\n  },\n  light: {\n    color: Colors['inputView'].dText,\n    backgroundColor: Colors['inputView'].wBackground,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}