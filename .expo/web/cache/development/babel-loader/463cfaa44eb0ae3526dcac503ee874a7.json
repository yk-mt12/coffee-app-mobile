{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { MaterialCommunityIcons, Ionicons, Feather, FontAwesome, AntDesign } from '@expo/vector-icons';\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport ModalScreen from \"../screens/ModalScreen\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport NormalScreen from \"../screens/NormalScreen\";\nimport CafeAuLaitScreen from \"../screens/CafeAuLaitScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport IceCoffee from \"../screens/IceCoffeeScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return _jsx(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    children: _jsx(RootNavigator, {})\n  });\n}\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Root\",\n      component: BottomTabNavigator,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NotFound\",\n      component: NotFoundScreen,\n      options: {\n        title: 'Oops!'\n      }\n    }), _jsx(Stack.Group, {\n      screenOptions: {\n        presentation: 'modal'\n      },\n      children: _jsx(Stack.Screen, {\n        name: \"Modal\",\n        component: ModalScreen\n      })\n    })]\n  });\n}\n\nvar BottomTab = createBottomTabNavigator();\n\nfunction BottomTabNavigator() {\n  var colorScheme = useColorScheme();\n  return _jsxs(BottomTab.Navigator, {\n    initialRouteName: \"Normal\",\n    screenOptions: {\n      tabBarActiveTintColor: Colors[colorScheme].tint\n    },\n    children: [_jsx(BottomTab.Screen, {\n      name: \"Normal\",\n      component: NormalScreen,\n      options: function options(_ref2) {\n        var navigation = _ref2.navigation;\n        return {\n          title: 'Coffee',\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color;\n            return _jsx(Feather, {\n              name: \"coffee\",\n              size: 24,\n              color: color\n            });\n          },\n          headerRight: function headerRight() {\n            return _jsx(Pressable, {\n              onPress: function onPress() {\n                return navigation.navigate('Modal');\n              },\n              style: function style(_ref4) {\n                var pressed = _ref4.pressed;\n                return {\n                  opacity: pressed ? 0.5 : 1\n                };\n              },\n              children: _jsx(AntDesign, {\n                name: \"setting\",\n                size: 25,\n                color: Colors[colorScheme].text,\n                style: {\n                  marginRight: 15\n                }\n              })\n            });\n          }\n        };\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"CafeAuLait\",\n      component: CafeAuLaitScreen,\n      options: function options(_ref5) {\n        var navigation = _ref5.navigation;\n        return {\n          title: 'Cafe Au Lait',\n          tabBarIcon: function tabBarIcon(_ref6) {\n            var color = _ref6.color;\n            return _jsx(Ionicons, {\n              name: \"ios-cafe-outline\",\n              size: 30,\n              color: color\n            });\n          },\n          headerRight: function headerRight() {\n            return _jsx(Pressable, {\n              onPress: function onPress() {\n                return navigation.navigate('Modal');\n              },\n              style: function style(_ref7) {\n                var pressed = _ref7.pressed;\n                return {\n                  opacity: pressed ? 0.5 : 1\n                };\n              },\n              children: _jsx(AntDesign, {\n                name: \"setting\",\n                size: 25,\n                color: Colors[colorScheme].text,\n                style: {\n                  marginRight: 15\n                }\n              })\n            });\n          }\n        };\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"IceCoffee\",\n      component: IceCoffee,\n      options: function options(_ref8) {\n        var navigation = _ref8.navigation;\n        return {\n          title: 'Ice Coffee',\n          tabBarIcon: function tabBarIcon(_ref9) {\n            var color = _ref9.color;\n            return _jsx(MaterialCommunityIcons, {\n              name: \"cup-water\",\n              size: 24,\n              color: color\n            });\n          },\n          headerRight: function headerRight() {\n            return _jsx(Pressable, {\n              onPress: function onPress() {\n                return navigation.navigate('Modal');\n              },\n              style: function style(_ref10) {\n                var pressed = _ref10.pressed;\n                return {\n                  opacity: pressed ? 0.5 : 1\n                };\n              },\n              children: _jsx(AntDesign, {\n                name: \"setting\",\n                size: 25,\n                color: Colors[colorScheme].text,\n                style: {\n                  marginRight: 15\n                }\n              })\n            });\n          }\n        };\n      }\n    })]\n  });\n}\n\nfunction TabBarIcon(props) {\n  return _jsx(FontAwesome, _objectSpread({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props));\n}","map":{"version":3,"sources":["/Users/yukim/develop/react-native/coffee-app/navigation/index.tsx"],"names":["createBottomTabNavigator","NavigationContainer","DefaultTheme","DarkTheme","createNativeStackNavigator","React","MaterialCommunityIcons","Ionicons","Feather","FontAwesome","AntDesign","Colors","useColorScheme","ModalScreen","NotFoundScreen","NormalScreen","CafeAuLaitScreen","LinkingConfiguration","IceCoffee","Navigation","colorScheme","Stack","RootNavigator","BottomTabNavigator","headerShown","title","presentation","BottomTab","tabBarActiveTintColor","tint","navigation","tabBarIcon","color","headerRight","navigate","pressed","opacity","text","marginRight","TabBarIcon","props","marginBottom"],"mappings":"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","sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName, Pressable } from 'react-native';\nimport { MaterialCommunityIcons, Ionicons, Feather, FontAwesome, AntDesign } from '@expo/vector-icons';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport ModalScreen from '../screens/ModalScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport NormalScreen from '../screens/NormalScreen';\nimport CafeAuLaitScreen from '../screens/CafeAuLaitScreen';\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\nimport IceCoffee from '../screens/IceCoffeeScreen';\nimport { useDispatch } from 'react-redux';\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{ headerShown: false }} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\n        <Stack.Screen name=\"Modal\" component={ModalScreen} />\n      </Stack.Group>\n    </Stack.Navigator>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\n\nfunction BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"Normal\"\n      screenOptions={{\n        tabBarActiveTintColor: Colors[colorScheme].tint,\n      }}>\n      <BottomTab.Screen\n        name=\"Normal\"\n        component={NormalScreen}\n        options={({ navigation }: RootTabScreenProps<'Normal'>) => ({\n          title: 'Coffee',\n          tabBarIcon: ({ color }) => <Feather name=\"coffee\" size={24} color={color} />,\n          headerRight: () => (\n            <Pressable\n              onPress={() => navigation.navigate('Modal')}\n              style={({ pressed }) => ({\n                opacity: pressed ? 0.5 : 1,\n              })}>\n              <AntDesign\n                name=\"setting\"\n                size={25}\n                color={Colors[colorScheme].text}\n                style={{ marginRight: 15 }}\n              />\n            </Pressable>\n          ),\n        })}\n      />\n\n      <BottomTab.Screen\n        name=\"CafeAuLait\"\n        component={CafeAuLaitScreen}\n        options={({ navigation }: RootTabScreenProps<'CafeAuLait'>) => ({\n          title: 'Cafe Au Lait',\n          tabBarIcon: ({ color }) => <Ionicons name=\"ios-cafe-outline\" size={30} color={color} />,\n          headerRight: () => (\n            <Pressable\n              onPress={() => navigation.navigate('Modal')}\n              style={({ pressed }) => ({\n                opacity: pressed ? 0.5 : 1,\n              })}>\n              <AntDesign\n                name=\"setting\"\n                size={25}\n                color={Colors[colorScheme].text}\n                style={{ marginRight: 15 }}\n              />\n            </Pressable>\n          ),\n        })}\n      />\n      <BottomTab.Screen\n        name=\"IceCoffee\"\n        component={IceCoffee}\n        options={({ navigation }: RootTabScreenProps<'IceCoffee'>) => ({\n          title: 'Ice Coffee',\n          tabBarIcon: ({ color }) => (\n            <MaterialCommunityIcons name=\"cup-water\" size={24} color={color} />\n          ),\n          headerRight: () => (\n            <Pressable\n              onPress={() => navigation.navigate('Modal')}\n              style={({ pressed }) => ({\n                opacity: pressed ? 0.5 : 1,\n              })}>\n              <AntDesign\n                name=\"setting\"\n                size={25}\n                color={Colors[colorScheme].text}\n                style={{ marginRight: 15 }}\n              />\n            </Pressable>\n          ),\n        })}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof FontAwesome>['name'];\n  color: string;\n}) {\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n"]},"metadata":{},"sourceType":"module"}