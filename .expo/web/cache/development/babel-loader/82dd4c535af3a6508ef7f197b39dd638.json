{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Provider } from 'react-redux';\nimport { store } from \"./redux/store\";\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport Navigation from \"./navigation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var isLoadingComplete = useCachedResources();\n  var colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return _jsx(Provider, {\n      store: store,\n      children: _jsxs(SafeAreaProvider, {\n        children: [_jsx(Navigation, {\n          colorScheme: colorScheme\n        }), _jsx(StatusBar, {})]\n      })\n    });\n  }\n}","map":{"version":3,"sources":["/Users/yukim/develop/react-native/coffee-app/App.tsx"],"names":["StatusBar","SafeAreaProvider","Provider","store","useCachedResources","useColorScheme","Navigation","App","isLoadingComplete","colorScheme"],"mappings":"AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,KAAT;AACA,OAAOC,kBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,MAAMC,iBAAiB,GAAGJ,kBAAkB,EAA5C;AACA,MAAMK,WAAW,GAAGJ,cAAc,EAAlC;;AAEA,MAAI,CAACG,iBAAL,EAAwB;AACtB,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WACE,KAAC,QAAD;AAAU,MAAA,KAAK,EAAEL,KAAjB;AAAA,gBACE,MAAC,gBAAD;AAAA,mBACE,KAAC,UAAD;AAAY,UAAA,WAAW,EAAEM;AAAzB,UADF,EAEE,KAAC,SAAD,KAFF;AAAA;AADF,MADF;AAQD;AACF","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <Provider store={store}>\n        <SafeAreaProvider>\n          <Navigation colorScheme={colorScheme} />\n          <StatusBar />\n        </SafeAreaProvider>\n      </Provider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}