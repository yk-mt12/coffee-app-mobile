{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport var initialState = {\n  amount: 0,\n  water: 0,\n  ratio: 15,\n  iceAmount: 0,\n  iceWater: 0,\n  iceRatio: 15,\n  isWater: false\n};\nexport var CoffeeSlice = createSlice({\n  name: 'coffee',\n  initialState: initialState,\n  reducers: {\n    updateAmount: function updateAmount(state, action) {\n      state.amount = action.payload;\n    },\n    updateWater: function updateWater(state, action) {\n      state.water = action.payload;\n    },\n    updateRatio: function updateRatio(state, action) {\n      state.ratio = action.payload;\n    },\n    updateIsWater: function updateIsWater(state) {\n      state.isWater = !state.isWater;\n    },\n    calculateAmount: function calculateAmount(state, action) {\n      state.amount = Math.round(action.payload / state.ratio);\n    },\n    calculateWater: function calculateWater(state, action) {\n      state.water = Math.round(action.payload * state.ratio);\n    },\n    updateIceAmount: function updateIceAmount(state, action) {\n      state.iceAmount = action.payload;\n    },\n    updateIceWater: function updateIceWater(state, action) {\n      state.iceWater = action.payload;\n    },\n    calculateIceCoffeeAmount: function calculateIceCoffeeAmount(state, action) {\n      state.iceAmount = Math.round(action.payload / state.iceRatio * 2);\n    },\n    calculateIceCoffeeWater: function calculateIceCoffeeWater(state, action) {\n      state.iceWater = Math.round(action.payload * state.iceRatio / 2);\n    }\n  }\n});\nvar _CoffeeSlice$actions = CoffeeSlice.actions,\n    updateIsWater = _CoffeeSlice$actions.updateIsWater,\n    updateWater = _CoffeeSlice$actions.updateWater,\n    updateRatio = _CoffeeSlice$actions.updateRatio,\n    updateAmount = _CoffeeSlice$actions.updateAmount,\n    updateIceAmount = _CoffeeSlice$actions.updateIceAmount,\n    updateIceWater = _CoffeeSlice$actions.updateIceWater,\n    calculateAmount = _CoffeeSlice$actions.calculateAmount,\n    calculateWater = _CoffeeSlice$actions.calculateWater,\n    calculateIceCoffeeWater = _CoffeeSlice$actions.calculateIceCoffeeWater,\n    calculateIceCoffeeAmount = _CoffeeSlice$actions.calculateIceCoffeeAmount;\nexport { updateIsWater, updateWater, updateRatio, updateAmount, updateIceAmount, updateIceWater, calculateAmount, calculateWater, calculateIceCoffeeWater, calculateIceCoffeeAmount };\nexport default CoffeeSlice.reducer;","map":{"version":3,"sources":["/Users/yukim/develop/react-native/coffee-app/redux/coffeeSlice.ts"],"names":["createSlice","initialState","amount","water","ratio","iceAmount","iceWater","iceRatio","isWater","CoffeeSlice","name","reducers","updateAmount","state","action","payload","updateWater","updateRatio","updateIsWater","calculateAmount","Math","round","calculateWater","updateIceAmount","updateIceWater","calculateIceCoffeeAmount","calculateIceCoffeeWater","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { CoffeeType } from './type';\n\nexport const initialState: CoffeeType = {\n  amount: 0,\n  water: 0,\n  ratio: 15,\n  iceAmount: 0,\n  iceWater: 0,\n  iceRatio: 15,\n  isWater: false,\n};\n\nexport const CoffeeSlice = createSlice({\n  name: 'coffee',\n  initialState,\n  reducers: {\n    updateAmount: (state, action) => {\n      state.amount = action.payload;\n    },\n    updateWater: (state, action) => {\n      state.water = action.payload;\n    },\n    updateRatio: (state, action) => {\n      state.ratio = action.payload;\n    },\n    updateIsWater: (state) => {\n      state.isWater = !state.isWater;\n    },\n    calculateAmount: (state, action) => {\n      state.amount = Math.round(action.payload / state.ratio);\n    },\n    calculateWater: (state, action) => {\n      state.water = Math.round(action.payload * state.ratio);\n    },\n    updateIceAmount: (state, action) => {\n      state.iceAmount = action.payload;\n    },\n    updateIceWater: (state, action) => {\n      state.iceWater = action.payload;\n    },\n    calculateIceCoffeeAmount: (state, action) => {\n      state.iceAmount = Math.round((action.payload / state.iceRatio) * 2);\n    },\n    calculateIceCoffeeWater: (state, action) => {\n      state.iceWater = Math.round((action.payload * state.iceRatio) / 2);\n    },\n  },\n});\n\nexport const {\n  updateIsWater,\n  updateWater,\n  updateRatio,\n  updateAmount,\n  updateIceAmount,\n  updateIceWater,\n  calculateAmount,\n  calculateWater,\n  calculateIceCoffeeWater,\n  calculateIceCoffeeAmount,\n} = CoffeeSlice.actions;\n\nexport default CoffeeSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}