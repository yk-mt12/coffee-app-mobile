{"version":3,"sources":["redux/coffeeSlice.ts","redux/screenSlice.ts","redux/store.ts","hooks/useColorScheme.ts","src/assets/constants/Colors.ts","src/assets/constants/Themed.tsx","src/components/Input/RatioInput.tsx","src/components/screens/ModalScreen.tsx","src/components/screens/NotFoundScreen.tsx","src/components/Input/WaterInput.tsx","src/components/View/WaterView.tsx","src/components/View/WaterBox.tsx","src/components/Button/ChangeUiButton.tsx","src/components/Input/AmountInput.tsx","src/components/View/AmountView.tsx","src/components/View/AmountBox.tsx","src/components/View/LeftWater.tsx","src/components/View/RightWater.tsx","src/components/View/RatioVeiw.tsx","src/components/View/TimerView.tsx","src/components/screens/NormalScreen.tsx","src/components/screens/CafeAuLaitScreen.tsx","src/navigation/LinkingConfiguration.ts","src/components/screens/IceCoffeeScreen.tsx","src/navigation/index.tsx","App.tsx","hooks/useCachedResources.ts","src/assets/fonts/SpaceMono-Regular.ttf"],"names":["CoffeeSlice","createSlice","name","initialState","amount","water","ratio","isWater","reducers","updateAmount","state","action","payload","updateWater","updateRatio","updateIsWater","calculateAmount","Math","round","calculateWater","calculateIceCoffeeAmount","calculateIceCoffeeWater","actions","ScreenSlice","nowScreen","changeScreen","store","configureStore","reducer","coffee","coffeeReducer","screen","screenReducer","useColorScheme","_useColorScheme","light","text","background","tint","tabIconDefault","tabIconSelected","dark","toggleSwitch","track","trueTrack","falseTrack","inputView","wText","dText","wBackground","dBackground","timerButtonLight","startText","startBackground","startBorder","stopText","stopBackground","timerButtonDark","timerResetButton","useThemeColor","props","colorName","theme","colorFromProps","Colors","Text","style","lightColor","darkColor","otherProps","color","View","backgroundColor","RatioInput","memo","dispatch","useDispatch","title","isDarkMode","useState","setRatio","styles","TextInput","input","placeholder","maxLength","returnKeyType","keyboardType","onChangeText","newText","Number","onSubmitEditing","StyleSheet","create","fontSize","marginBottom","padding","marginTop","borderRadius","width","ModalScreen","useIsFocused","container","StatusBar","Platform","OS","flex","paddingLeft","paddingTop","fontWeight","switchButton","NotFoundScreen","navigation","TouchableOpacity","onPress","replace","link","linkText","alignItems","justifyContent","paddingVertical","WaterInput","setWater","useSelector","SafeAreaView","textAlign","left","height","WaterView","WaterBox","isLeftWater","paddingBottom","ChangeUiButton","FontAwesome","size","AmountInput","setAmount","AmountView","AmountBox","LeftWater","rowItem","paddingRight","RightWater","RatioView","marginRight","TimerView","isStopwatchStart","setIsStopwatchStart","resetStopwatch","setResetStopwatch","sectionStyle","button","flexDirection","marginHorizontal","buttonText","startButton","stopButton","resetButton","options","margin","start","reset","TouchableHighlight","NormalScreen","isForcused","useEffect","containerItem","ratioContainer","CafeAuLaitScreen","linking","prefixes","Linking","config","screens","Root","Normal","CafeAuLait","IceCoffee","IceCoffeeScreen","Setting","SettingScreen","Modal","NotFound","Navigation","colorScheme","NavigationContainer","LinkingConfiguration","DarkTheme","DefaultTheme","RootNavigator","Stack","createNativeStackNavigator","Navigator","Screen","component","BottomTabNavigator","headerShown","Group","screenOptions","presentation","BottomTab","createBottomTabNavigator","initialRouteName","tabBarActiveTintColor","tabBarIcon","Feather","headerRight","Pressable","navigate","opacity","pressed","AntDesign","Ionicons","MaterialCommunityIcons","App","isLoadingComplete","setLoadingComplete","a","async","SplashScreen","Font","font","require","console","warn","useCachedResources","module","exports"],"mappings":"8JAUaA,EAAcC,YAAY,CACrCC,KAAM,SACNC,aATsC,CACtCC,OAAQ,EACRC,MAAO,EACPC,MAAO,GACPC,SAAS,GAMTC,SAAU,CACRC,aAAc,SAACC,EAAOC,GACpBD,EAAMN,OAASO,EAAOC,SAExBC,YAAa,SAACH,EAAOC,GACnBD,EAAML,MAAQM,EAAOC,SAEvBE,YAAa,SAACJ,EAAOC,GACnBD,EAAMJ,MAAQK,EAAOC,SAEvBG,cAAe,SAACL,GACdA,EAAMH,SAAWG,EAAMH,SAEzBS,gBAAiB,SAACN,EAAOC,GACvBD,EAAMN,OAASa,KAAKC,MAAMP,EAAOC,QAAUF,EAAMJ,QAEnDa,eAAgB,SAACT,EAAOC,GACtBD,EAAML,MAAQY,KAAKC,MAAMP,EAAOC,QAAUF,EAAMJ,QAElDc,yBAA0B,SAACV,EAAOC,GAChCD,EAAMN,OAASa,KAAKC,MAAOP,EAAOC,QAAUF,EAAMJ,MAAS,IAE7De,wBAAyB,SAACX,EAAOC,GAC/BD,EAAML,MAAQY,KAAKC,MAAOP,EAAOC,QAAUF,EAAMJ,MAAS,OAKzD,EASHN,EAAYsB,QARdP,EADK,EACLA,cACAF,EAFK,EAELA,YACAC,EAHK,EAGLA,YACAL,EAJK,EAILA,aACAO,EALK,EAKLA,gBACAG,EANK,EAMLA,eACAE,EAPK,EAOLA,wBACAD,EARK,EAQLA,yBAGapB,IAAf,QC5CauB,EAActB,YAAY,CACrCC,KAAM,SACNC,aANsC,CACtCqB,UAAW,UAMXhB,SAAU,CACRiB,aAAc,SAACf,EAAOC,GACpBD,EAAMc,UAAYb,EAAOC,YAKhBa,EAAiBF,EAAYD,QAA7BG,aAEAF,IAAf,QChBaG,EAAQC,YAAe,CAClCC,QAAS,CACPC,OAAQC,EACRC,OAAQC,K,+pBCFG,SAASC,IACtB,OAAOC,c,4FCHM,GACbC,MAAO,CACLC,KAAM,OACNC,WAAY,OACZC,KAPmB,OAQnBC,eAAgB,OAChBC,gBATmB,QAWrBC,KAAM,CACJL,KAAM,OACNC,WAAY,OACZC,KAbkB,OAclBC,eAAgB,OAChBC,gBAfkB,QAiBpBE,aAAc,CACZC,MAAO,OACPC,UAAW,UACXC,WAAY,WAEdC,UAAW,CACTC,MAAO,OACPC,MAAO,OACPC,YAAa,4BACbC,YAAa,6BAEfC,iBAAkB,CAChBC,UAAY,mBACZC,gBAAiB,yBACjBC,YAAa,yBACbC,SAAU,yBACVC,eAAgB,0BAElBC,gBAAiB,CACfL,UAAY,yBACZC,gBAAiB,yBACjBE,SAAU,yBACVC,eAAgB,0BAElBE,iBAAkB,CAChBV,MAAO,OACPD,MAAO,OACPV,WAAY,uB,qsBCnCT,SAASsB,GACdC,EACAC,GAEA,IAAMC,EAAQ7B,IACR8B,EAAiBH,EAAME,GAE7B,OAAIC,GAGKC,EAAOF,GAAOD,GAYlB,SAASI,GAAKL,GACnB,IAAQM,EAAgDN,EAAhDM,MAAOC,EAAyCP,EAAzCO,WAAYC,EAA6BR,EAA7BQ,UAAcC,EAAzC,IAAwDT,EAAxD,IACMU,EAAQX,GAAc,CAAExB,MAAOgC,EAAY1B,KAAM2B,GAAa,QAEpE,OAAO,cAAC,IAAD,IAAaF,MAAO,CAAC,CAAEI,SAASJ,IAAYG,IAG9C,SAASE,GAAKX,GACnB,IAAQM,EAAgDN,EAAhDM,MAAOC,EAAyCP,EAAzCO,WAAYC,EAA6BR,EAA7BQ,UAAcC,EAAzC,IAAwDT,EAAxD,IACMY,EAAkBb,GAAc,CAAExB,MAAOgC,EAAY1B,KAAM2B,GAAa,cAE9E,OAAO,cAAC,IAAD,IAAaF,MAAO,CAAC,CAAEM,mBAAmBN,IAAYG,I,aClClDI,GAAaC,gBAAK,SAACd,GAC9B,IAAMe,EAAWC,cACTC,EAAUjB,EAAViB,MACFC,EAAkC,SAArB7C,cACnB,EAA0B8C,mBAAiB,GAA3C,WAAOzE,EAAP,KAAc0E,EAAd,KAEA,OACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAMd,MAAOe,GAAOJ,MAApB,SAA4BA,IAC5B,cAACK,GAAA,EAAD,CACEhB,MAAO,CAACe,GAAOE,MAAOL,EAAaG,GAAOxC,KAAOwC,GAAO9C,OACxDiD,YAAY,QACZC,UAAW,EACXC,cAAc,OACdC,aAAa,0BAEbC,aAAc,SAACC,GAAD,OAAaT,EAASU,OAAOD,KAC3CE,gBAAiB,WACfhB,EAAS7D,EAAYR,IACrBqE,EAAS9D,EAAY,IACrB8D,EAASlE,EAAa,aAO1BwE,GAASW,IAAWC,OAAO,CAC/BhB,MAAO,CACLiB,SAAU,GACVC,aAAc,GAEhBZ,MAAO,CACLa,QAAS,GACTC,UAAW,EACXC,aAAc,GACdC,MAAO,MACPL,SAAU,IAEZrD,KAAM,CACJ6B,MAAON,EAAM,UAAcjB,MAC3ByB,gBAAiBR,EAAM,UAAcf,aAEvCd,MAAO,CACLmC,MAAON,EAAM,UAAchB,MAC3BwB,gBAAiBR,EAAM,UAAcf,e,SC/C1B,SAASmD,KACHC,eAEnB,OACE,eAAC,GAAD,CAAMnC,MAAOe,GAAOqB,UAApB,UACE,cAACC,EAAA,EAAD,CAAWrC,MAAuB,QAAhBsC,IAASC,GAAe,QAAU,SACpD,cAAChC,GAAD,CAAYI,MAAO,2BAKzB,IAAMI,GAASW,IAAWC,OAAO,CAC/BS,UAAW,CACTI,KAAM,EACNC,YAAa,GACbC,WAAY,IAEd/B,MAAO,CACLiB,SAAU,GACVe,WAAY,QAEdC,aAAc,CACZb,UAAW,M,UCxBA,SAASc,GAAT,GAA2E,IAAjDC,EAAgD,EAAhDA,WACvC,OACE,eAAC,GAAD,CAAM9C,MAAOe,GAAOqB,UAApB,UACE,cAAC,GAAD,CAAMpC,MAAOe,GAAOJ,MAApB,8JACA,cAACoC,GAAA,EAAD,CAAkBC,QAAS,kBAAMF,EAAWG,QAAQ,SAASjD,MAAOe,GAAOmC,KAA3E,SACE,cAAC,GAAD,CAAMlD,MAAOe,GAAOoC,SAApB,uDAMR,IAAMpC,GAASW,IAAWC,OAAO,CAC/BS,UAAW,CACTI,KAAM,EACNY,WAAY,SACZC,eAAgB,SAChBvB,QAAS,IAEXnB,MAAO,CACLiB,SAAU,GACVe,WAAY,QAEdO,KAAM,CACJnB,UAAW,GACXuB,gBAAiB,IAEnBH,SAAU,CACRvB,SAAU,GACVxB,MAAO,a,+BC3BEmD,GAAa/C,gBAAK,WAC7B,IAAMC,EAAWC,cACXE,EAAkC,SAArB7C,cACnB,EAA0B8C,mBAAiB,GAA3C,WAAO1E,EAAP,KAAcqH,EAAd,KACMlG,EAAYmG,aAAY,SAACjH,GAAD,OAAWA,EAAMqB,OAAOP,aAEtD,OACE,cAACoG,GAAA,EAAD,CAAc1D,MAAOe,GAAOqB,UAA5B,SACE,cAACpB,GAAA,EAAD,CACEhB,MAAO,CAACe,GAAOE,MAAOL,EAAaG,GAAOxC,KAAOwC,GAAO9C,OACxDiD,YAAY,QACZC,UAAW,EACXC,cAAc,OACdC,aAAa,0BACbsC,UAAU,SACVrC,aAAc,SAACC,GAAD,OAAaiC,EAAShC,OAAOD,KAC3CE,gBAAiB,WACfhB,EAAS9D,EAAYR,IACH,WAAdmB,GAAwC,eAAdA,EAC5BmD,EAAS3D,EAAgBX,IACF,cAAdmB,GACTmD,EAASvD,EAAyBf,YAQxC4E,GAASW,IAAWC,OAAO,CAC/BS,UAAW,CACTI,KAAM,GAER7B,MAAO,CACLiB,SAAU,GACVC,aAAc,GACd+B,MAAO,EACPD,UAAW,UAEb1C,MAAO,CACLa,QAAS,EACTC,UAAW,EACXC,aAAc,GACdC,MAAO,IACP4B,OAAQ,GACRjC,SAAU,GACV+B,UAAW,UAEbpF,KAAM,CACJ6B,MAAON,EAAM,UAAcjB,MAC3ByB,gBAAiBR,EAAM,UAAcf,aAEvCd,MAAO,CACLmC,MAAON,EAAM,UAAchB,MAC3BwB,gBAAiBR,EAAM,UAAcf,eCrD5B+E,GAAYtD,gBAAK,WAC5B,IAAMI,EAAkC,SAArB7C,cACX5B,EAAUsH,aAAY,SAACjH,GAAD,OAAWA,EAAMmB,UAAvCxB,MAER,OACE,cAAC,GAAD,CAAM6D,MAAO,CAACe,GAAOqB,UAAWxB,EAAaG,GAAOxC,KAAOwC,GAAO9C,OAAlE,SACE,eAAC,GAAD,CAAM+B,MAAOe,GAAO7C,KAApB,UAA2B/B,EAA3B,cAKA4E,GAASW,IAAWC,OAAO,CAC/BS,UAAW,CACTN,QAAS,EACTC,UAAW,EACXC,aAAc,GACdC,MAAO,IACP4B,OAAQ,GACRF,UAAW,UAEbzF,KAAM,CACJ0D,SAAU,GACV+B,UAAW,UAEbpF,KAAM,CACJ6B,MAAON,EAAM,UAAcjB,MAC3ByB,gBAAiBR,EAAM,UAAcf,aAEvCd,MAAO,CACLmC,MAAON,EAAM,UAAchB,MAC3BwB,gBAAiBR,EAAM,UAAcf,eC5B5BgF,GAAWvD,gBAAK,SAACd,GAC5B,IAAQiB,EAAUjB,EAAViB,MACFqD,EAAcP,aAAY,SAACjH,GAAD,OAAWA,EAAMmB,OAAOtB,WAExD,OACE,eAAC,GAAD,CAAM2D,MAAOe,GAAOqB,UAApB,UACE,cAAC,GAAD,CAAMpC,MAAOe,GAAOJ,MAApB,SAA4BA,IAC3BqD,EACC,cAAC,GAAD,UACE,cAACF,GAAD,MAGF,cAAC,GAAD,UACE,cAACP,GAAD,YAOJxC,GAASW,IAAWC,OAAO,CAC/BS,UAAW,CACTI,KAAM,EACNY,WAAY,UAEdzC,MAAO,CACLiB,SAAU,GACVqC,cAAe,MC7BNC,GAAiB,WAC5B,IAAMzD,EAAWC,cACXE,EAAkC,SAArB7C,cAEnB,OACE,cAACoG,EAAA,EAAD,CACEnI,KAAK,WACLoI,KAAM,GACNhE,MAAOQ,EAAa,QAAU,QAC9BoC,QAAS,WACPvC,EAAS5D,KACT4D,EAASlE,EAAa,IACtBkE,EAAS9D,EAAY,QCZhB0H,GAAc7D,gBAAK,WAC9B,IAAMC,EAAWC,cACXE,EAAkC,SAArB7C,cACnB,EAA4B8C,mBAAiB,GAA7C,WAAO3E,EAAP,KAAeoI,EAAf,KACMhH,EAAYmG,aAAY,SAACjH,GAAD,OAAWA,EAAMqB,OAAOP,aAEtD,OACE,cAAC0D,GAAA,EAAD,CACEhB,MAAO,CAACe,GAAOE,MAAOL,EAAaG,GAAOxC,KAAOwC,GAAO9C,OACxDiD,YAAY,QACZC,UAAW,EACXC,cAAc,OACdC,aAAa,0BACbsC,UAAU,SACVrC,aAAc,SAACC,GAAD,OAAa+C,EAAU9C,OAAOD,KAC5CE,gBAAiB,WACfhB,EAASlE,EAAaL,IACJ,eAAdoB,GAA4C,WAAdA,EAChCmD,EAASxD,EAAef,IACD,cAAdoB,GACTmD,EAAStD,EAAwBjB,UAOrC6E,GAASW,IAAWC,OAAO,CAC/BS,UAAW,CACTI,KAAM,GAERvB,MAAO,CACLa,QAAS,EACTC,UAAW,EACXC,aAAc,GACdC,MAAO,IACP4B,OAAQ,GACRjC,SAAU,GACV+B,UAAW,UAEbpF,KAAM,CACJ6B,MAAON,EAAM,UAAcjB,MAC3ByB,gBAAiBR,EAAM,UAAcf,aAEvCd,MAAO,CACLmC,MAAON,EAAM,UAAchB,MAC3BwB,gBAAiBR,EAAM,UAAcf,eC/C5BwF,GAAa/D,gBAAK,WAC7B,IAAMI,EAAkC,SAArB7C,cACX7B,EAAWuH,aAAY,SAACjH,GAAD,OAAWA,EAAMmB,UAAxCzB,OAER,OACE,cAAC,GAAD,CAAM8D,MAAO,CAACe,GAAOqB,UAAWxB,EAAaG,GAAOxC,KAAOwC,GAAO9C,OAAlE,SACE,eAAC,GAAD,CAAM+B,MAAOe,GAAO7C,KAApB,UAA2BhC,EAA3B,aAKA6E,GAASW,IAAWC,OAAO,CAC/BS,UAAW,CACTN,QAAS,EACTC,UAAW,EACXC,aAAc,GACdC,MAAO,IACP4B,OAAQ,IAEV3F,KAAM,CACJ0D,SAAU,GACV+B,UAAW,UAEbpF,KAAM,CACJ6B,MAAON,EAAM,UAAcjB,MAC3ByB,gBAAiBR,EAAM,UAAcf,aAEvCd,MAAO,CACLmC,MAAON,EAAM,UAAchB,MAC3BwB,gBAAiBR,EAAM,UAAcf,eC1B5ByF,GAAYhE,gBAAK,SAACd,GAC7B,IAAQiB,EAAUjB,EAAViB,MACFqD,EAAcP,aAAY,SAACjH,GAAD,OAAWA,EAAMmB,OAAOtB,WAExD,OACE,eAAC,GAAD,CAAM2D,MAAOe,GAAOqB,UAApB,UACE,cAAC,GAAD,CAAMpC,MAAOe,GAAOJ,MAApB,SAA4BA,IAC3BqD,EACC,cAAC,GAAD,UACE,cAACK,GAAD,MAGF,cAAC,GAAD,UACE,cAACE,GAAD,YAOJxD,GAASW,IAAWC,OAAO,CAC/BS,UAAW,CACTI,KAAM,EACNY,WAAY,UAEdzC,MAAO,CACLiB,SAAU,GACVqC,cAAe,MC5BNQ,GAAYjE,gBAAK,WAC5B,OACE,qCACE,cAAC,GAAD,CAAMR,MAAOe,GAAO2D,QAApB,SACE,cAACX,GAAD,CAAUpD,MAAO,mBAEnB,cAAC,GAAD,IACA,cAAC,GAAD,CAAMX,MAAOe,GAAO2D,QAApB,SACE,cAACF,GAAD,CAAW7D,MAAO,yBAMpBI,GAASW,IAAWC,OAAO,CAC/B+C,QAAS,CACPf,UAAW,SACX1B,MAAO,IACPO,KAAM,GACNC,YAAa,GACbkC,aAAc,MCpBLC,GAAapE,gBAAK,WAC7B,OACE,qCACE,cAAC,GAAD,CAAMR,MAAOe,GAAO2D,QAApB,SACE,cAACF,GAAD,CAAW7D,MAAO,mBAEpB,cAAC,GAAD,IACA,cAAC,GAAD,CAAMX,MAAOe,GAAO2D,QAApB,SACE,cAACX,GAAD,CAAUpD,MAAO,yBAMnBI,GAASW,IAAWC,OAAO,CAC/B+C,QAAS,CACPf,UAAW,SACX1B,MAAO,IACPO,KAAM,GACNC,YAAa,GACbkC,aAAc,MCtBLE,GAAYrE,gBAAK,WAC5B,IAAMI,EAAkC,SAArB7C,cACb3B,EAAgBqH,aAAY,SAACjH,GAAD,OAAWA,EAAMmB,OAAOvB,SAClDkB,EAAcmG,aAAY,SAACjH,GAAD,OAAWA,EAAMqB,UAA3CP,UAER,OACE,cAAC,GAAD,CAAM0C,MAAO,CAACe,GAAOqB,UAAWxB,EAAaG,GAAOxC,KAAOwC,GAAO9C,OAAlE,SACE,eAAC,GAAD,CAAM+B,MAAOe,GAAO7C,KAApB,mBACsB,aAAbZ,EAA2B,EAAI,EADxC,MAC8ClB,UAM9C2E,GAASW,IAAWC,OAAO,CAC/BS,UAAW,CACTN,QAAS,GACTC,UAAW,EACX+C,YAAa,GACb9C,aAAc,GACdC,MAAO,IACP4B,OAAQ,GACRF,UAAW,UAEbzF,KAAM,CACJ0D,SAAU,GACV+B,UAAW,UAEbpF,KAAM,CACJ6B,MAAON,EAAM,UAAcjB,MAC3ByB,gBAAiBR,EAAM,UAAcf,aAEvCd,MAAO,CACLmC,MAAON,EAAM,UAAchB,MAC3BwB,gBAAiBR,EAAM,UAAcf,e,oBCjC5BgG,GAAYvE,gBAAK,WAC5B,IAAMI,EAAkC,SAArB7C,cACnB,EAAgD8C,oBAAS,GAAzD,WAAOmE,EAAP,KAAyBC,EAAzB,KACA,EAA4CpE,oBAAS,GAArD,WAAOqE,EAAP,KAAuBC,EAAvB,KAEMpE,EAASW,IAAWC,OAAO,CAC/BS,UAAW,CACTL,UAAW,IAEbqD,aAAc,GACdC,OAAQ,CACNC,cAAe,MACfjC,eAAgB,gBAChBtB,UAAW,GACXwD,iBAAkB,IAEpBC,WAAY,CACV5D,SAAU,GACVxB,MAAOQ,EAAad,EAAM,iBAAqBhB,MAAQgB,EAAM,iBAAqBjB,OAEpFN,KAAM,CACJ6B,MAAON,EAAM,UAAcjB,OAG7BZ,MAAO,CACLmC,MAAON,EAAM,UAAchB,OAG7B2G,YAAa,CACXxD,MAAO,GACP4B,OAAQ,GACRR,eAAgB,SAChBD,WAAY,SACZtB,QAAS,GACTE,aAAc,IAEd1B,gBAAiBM,EACbd,EAAM,gBAAoBX,gBAC1BW,EAAM,iBAAqBX,iBAEjCD,UAAW,CACTkB,MAAOQ,EACHd,EAAM,gBAAoBZ,UAC1BY,EAAM,iBAAqBZ,WAEjCwG,WAAY,CACVpF,gBAAiBM,EACbd,EAAM,gBAAoBR,eAC1BQ,EAAM,iBAAqBR,eAC/B2C,MAAO,GACP4B,OAAQ,GACRR,eAAgB,SAChBD,WAAY,SACZtB,QAAS,GACTE,aAAc,KAEhB3C,SAAU,CACRe,MAAOQ,EAAad,EAAM,gBAAoBT,SAAWS,EAAM,iBAAqBT,UAEtFsG,YAAa,CACXrF,gBAAiBR,EAAM,iBAAqB3B,WAC5C8D,MAAO,GACP4B,OAAQ,GACRR,eAAgB,SAChBD,WAAY,SACZtB,QAAS,GACTE,aAAc,OAIZ4D,EAAU,CACdxD,UAAW,CACTM,WAAY,GACZV,aAAc,EACdoB,WAAY,UAEdlF,KAAM,CACJ0D,SAAU,GACVe,WAAY,MACZvC,MAAOQ,EAAad,EAAM,KAAS5B,KAAO4B,EAAM,MAAU5B,KAC1D2H,OAAQ,KAIZ,OACE,mCACE,eAAC,GAAD,CAAM7F,MAAOe,EAAOqB,UAApB,UACE,cAAC,GAAD,CAAMpC,MAAO,CAACe,EAAOqE,aAAcxE,EAAaG,EAAOxC,KAAOwC,EAAO9C,OAArE,SACE,cAAC,aAAD,CACE6H,MAAOd,EACPe,MAAOb,EACPU,QAASA,EACT5F,MAAOY,EAAaG,EAAOxC,KAAOwC,EAAO9C,UAG7C,eAAC,GAAD,CAAM+B,MAAO,CAACe,EAAOsE,QAArB,UACE,cAACW,GAAA,EAAD,CACEhD,QAAS,WACPiC,GAAoB,GACpBE,GAAkB,IAEpBnF,MAAO,CAACe,EAAO4E,aALjB,SAME,cAAC,GAAD,CAAM3F,MAAO,CAACe,EAAOyE,YAArB,qBAEF,cAACQ,GAAA,EAAD,CACEhD,QAAS,WACPiC,GAAqBD,GACrBG,GAAkB,IAEpBnF,MAAO,CAACgF,EAAmBjE,EAAO2E,WAAa3E,EAAO0E,aALxD,SAME,cAAC,GAAD,CACEzF,MAAO,CAACe,EAAOyE,WAAYR,EAAmBjE,EAAO1B,SAAW0B,EAAO7B,WADzE,SAEI8F,EAA6B,OAAV,uBCxGpB,SAASiB,GAAT,GAAyD,QACtE,IAAMjC,EAAcP,aAAY,SAACjH,GAAD,OAAWA,EAAMmB,OAAOtB,WAClDoE,EAAWC,cACXwF,EAAa/D,eAUnB,OARAgE,qBAAU,WACJD,IACFzF,EAASlD,EAAa,WACtBkD,EAASlE,EAAa,IACtBkE,EAAS9D,EAAY,OAEtB,CAACuJ,IAGF,eAAC,GAAD,CAAMlG,MAAOe,GAAOqB,UAApB,UACE,cAAC,GAAD,CAAMpC,MAAO,CAACe,GAAOqF,eAArB,SACGpC,EACC,mCACE,cAACY,GAAD,MAGF,mCACE,cAACH,GAAD,QAIN,cAAC,GAAD,CAAMzE,MAAOe,GAAOsF,eAApB,SACE,cAACxB,GAAD,MAEF,cAAC,GAAD,UACE,cAACE,GAAD,SAMR,IAAMhE,GAASW,IAAWC,OAAO,CAC/BS,UAAW,CACTI,KAAM,GAER4D,cAAe,CACbrE,UAAW,GACXD,QAAS,GACTwD,cAAe,OAEjBe,eAAgB,CACdtE,UAAW,GACXD,QAAS,GACTsB,WAAY,UAEd7E,KAAM,CACJ6B,MAAON,EAAM,KAAS5B,KACtBoC,gBAAiBR,EAAM,KAAS3B,YAElCF,MAAO,CACLmC,MAAON,EAAM,MAAU5B,KACvBoC,gBAAiBR,EAAM,MAAU3B,cCzDtB,SAASmI,KACtB,IAAMtC,EAAcP,aAAY,SAACjH,GAAD,OAAWA,EAAMmB,OAAOtB,WAClDoE,EAAWC,cACXwF,EAAa/D,eAUnB,OARAgE,qBAAU,WACJD,IACFzF,EAASlD,EAAa,eACtBkD,EAASlE,EAAa,IACtBkE,EAAS9D,EAAY,OAEtB,CAACuJ,IAGF,eAAC,GAAD,CAAMlG,MAAOe,GAAOqB,UAApB,UACE,cAAC,GAAD,CAAMpC,MAAO,CAACe,GAAOqF,eAArB,SACGpC,EACC,mCACE,cAACY,GAAD,MAGF,mCACE,cAACH,GAAD,QAIN,cAAC,GAAD,CAAMzE,MAAOe,GAAOsF,eAApB,SACE,cAACxB,GAAD,MAEF,cAAC,GAAD,UACE,cAACE,GAAD,SAMR,IAAMhE,GAASW,IAAWC,OAAO,CAC/BS,UAAW,CACTI,KAAM,GAER4D,cAAe,CACbrE,UAAW,GACXD,QAAS,GACTwD,cAAe,OAEjBe,eAAgB,CACdtE,UAAW,GACXD,QAAS,GACTsB,WAAY,UAEd7E,KAAM,CACJ6B,MAAON,EAAM,KAAS5B,KACtBoC,gBAAiBR,EAAM,KAAS3B,YAElCF,MAAO,CACLmC,MAAON,EAAM,MAAU5B,KACvBoC,gBAAiBR,EAAM,MAAU3B,cCzBtBoI,GAlCqC,CAClDC,SAAU,C,OAACC,EAAgB,MAC3BC,OAAQ,CACNC,QAAS,CACPC,KAAM,CACJD,QAAS,CACPE,OAAQ,CACNF,QAAS,CACPV,aAAc,WAGlBa,WAAY,CACVH,QAAS,CACPL,iBAAkB,iBAGtBS,UAAW,CACTJ,QAAS,CACPK,gBAAiB,eAGrBC,QAAS,CACPN,QAAS,CACPO,cAAe,cAKvBC,MAAO,QACPC,SAAU,OC1BD,SAASL,KACtB,IAAM/C,EAAcP,aAAY,SAACjH,GAAD,OAAWA,EAAMmB,OAAOtB,WAClDoE,EAAWC,cACbwF,EAAa/D,eAajB,OARAgE,qBAAU,WACJD,IACFzF,EAASlD,EAAa,cACtBkD,EAASlE,EAAa,IACtBkE,EAAS9D,EAAY,OAEtB,CAACuJ,IAGF,eAAC,GAAD,CAAMlG,MAAOe,GAAOqB,UAApB,UACE,cAAC,GAAD,CAAMpC,MAAO,CAACe,GAAOqF,eAArB,SACGpC,EACC,mCACE,cAACY,GAAD,MAGF,mCACE,cAACH,GAAD,QAIN,cAAC,GAAD,CAAMzE,MAAOe,GAAOsF,eAApB,SACE,cAACxB,GAAD,MAEF,cAAC,GAAD,UACE,cAACE,GAAD,SAMR,IAAMhE,GAASW,IAAWC,OAAO,CAC/BS,UAAW,CACTI,KAAM,GAER4D,cAAe,CACbrE,UAAW,GACXD,QAAS,GACTwD,cAAe,OAEjBe,eAAgB,CACdtE,UAAW,GACXD,QAAS,GACTsB,WAAY,UAEd7E,KAAM,CACJ6B,MAAON,EAAM,KAAS5B,KACtBoC,gBAAiBR,EAAM,KAAS3B,YAElCF,MAAO,CACLmC,MAAON,EAAM,MAAU5B,KACvBoC,gBAAiBR,EAAM,MAAU3B,cCnDtB,SAASkJ,GAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,YACnC,OACE,cAACC,EAAA,EAAD,CACEhB,QAASiB,GACT5H,MAAuB,SAAhB0H,EAAyBG,IAAYC,IAF9C,SAGE,cAACC,GAAD,MASN,IAAMC,GAAQC,cAEd,SAASF,KACP,OACE,eAACC,GAAME,UAAP,WACE,cAACF,GAAMG,OAAP,CAAc/L,KAAK,OAAOgM,UAAWC,GAAoBrC,QAAS,CAAEsC,aAAa,KACjF,cAACN,GAAMG,OAAP,CAAc/L,KAAK,WAAWgM,UAAWnF,GAAgB+C,QAAS,CAAEjF,MAAO,WAC3E,cAACiH,GAAMO,MAAP,CAAaC,cAAe,CAAEC,aAAc,SAA5C,SACE,cAACT,GAAMG,OAAP,CAAc/L,KAAK,QAAQgM,UAAW9F,UAU9C,IAAMoG,GAAYC,cAElB,SAASN,KACP,IAAMX,EAAcvJ,IAEpB,OACE,eAACuK,GAAUR,UAAX,CACEU,iBAAiB,SACjBJ,cAAe,CACbK,sBAAuB3I,EAAOwH,GAAalJ,MAH/C,UAKE,cAACkK,GAAUP,OAAX,CACE/L,KAAK,SACLgM,UAAW/B,GACXL,QAAS,gBAAG9C,EAAH,EAAGA,WAAH,MAAmD,CAC1DnC,MAAO,SACP+H,WAAY,gBAAGtI,EAAH,EAAGA,MAAH,OAAe,cAACuI,EAAA,EAAD,CAAS3M,KAAK,SAASoI,KAAM,GAAIhE,MAAOA,KACnEwI,YAAa,kBACX,cAACC,EAAA,EAAD,CACE7F,QAAS,kBAAMF,EAAWgG,SAAS,UACnC9I,MAAO,kBAAkB,CACvB+I,QADK,EAAGC,QACW,GAAM,IAH7B,SAKE,cAACC,EAAA,EAAD,CACEjN,KAAK,UACLoI,KAAM,GACNhE,MAAON,EAAOwH,GAAapJ,KAC3B8B,MAAO,CAAE8E,YAAa,aAOhC,cAACwD,GAAUP,OAAX,CACE/L,KAAK,aACLgM,UAAW1B,GACXV,QAAS,gBAAG9C,EAAH,EAAGA,WAAH,MAAuD,CAC9DnC,MAAO,eACP+H,WAAY,gBAAGtI,EAAH,EAAGA,MAAH,OAAe,cAAC8I,EAAA,EAAD,CAAUlN,KAAK,mBAAmBoI,KAAM,GAAIhE,MAAOA,KAC9EwI,YAAa,kBACX,cAACC,EAAA,EAAD,CACE7F,QAAS,kBAAMF,EAAWgG,SAAS,UACnC9I,MAAO,kBAAkB,CACvB+I,QADK,EAAGC,QACW,GAAM,IAH7B,SAKE,cAACC,EAAA,EAAD,CACEjN,KAAK,UACLoI,KAAM,GACNhE,MAAON,EAAOwH,GAAapJ,KAC3B8B,MAAO,CAAE8E,YAAa,aAMhC,cAACwD,GAAUP,OAAX,CACE/L,KAAK,YACLgM,UAAWjB,GACXnB,QAAS,gBAAG9C,EAAH,EAAGA,WAAH,MAAsD,CAC7DnC,MAAO,aACP+H,WAAY,gBAAGtI,EAAH,EAAGA,MAAH,OACV,cAAC+I,EAAA,EAAD,CAAwBnN,KAAK,YAAYoI,KAAM,GAAIhE,MAAOA,KAE5DwI,YAAa,kBACX,cAACC,EAAA,EAAD,CACE7F,QAAS,kBAAMF,EAAWgG,SAAS,UACnC9I,MAAO,kBAAkB,CACvB+I,QADK,EAAGC,QACW,GAAM,IAH7B,SAKE,cAACC,EAAA,EAAD,CACEjN,KAAK,UACLoI,KAAM,GACNhE,MAAON,EAAOwH,GAAapJ,KAC3B8B,MAAO,CAAE8E,YAAa,gBCxHvB,SAASsE,KACtB,IAAMC,ECJO,WACb,MAAgDxI,oBAAS,GAAzD,WAAOwI,EAAP,KAA0BC,EAA1B,KAyBA,OAtBAnD,qBAAU,WACR,EAAAoD,EAAAC,OAAA,gEAEIC,MAFJ,WAAAF,EAAA,MAKUG,IAAA,OACDvF,IAAYwF,MADX,IAEJ,aAAcC,EAAQ,SAP5B,sDAWIC,QAAQC,KAAR,MAXJ,uBAaIR,GAAmB,GACnBG,MAdJ,mFAmBC,IAEIJ,EDtBmBU,GACpBzC,EAAcvJ,IAEpB,OAAKsL,EAID,cAAC,IAAD,CAAU7L,MAAOA,EAAjB,SACE,eAAC,IAAD,WACE,cAAC6J,GAAD,CAAYC,YAAaA,IACzB,cAACjF,EAAA,EAAD,SANC,O,0DEbX2H,EAAOC,QAAU,IAA0B,iC","file":"static/js/app.e79747c2.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { CoffeeType } from './type';\n\nexport const initialState: CoffeeType = {\n  amount: 0,\n  water: 0,\n  ratio: 15,\n  isWater: false,\n};\n\nexport const CoffeeSlice = createSlice({\n  name: 'coffee',\n  initialState,\n  reducers: {\n    updateAmount: (state, action) => {\n      state.amount = action.payload;\n    },\n    updateWater: (state, action) => {\n      state.water = action.payload;\n    },\n    updateRatio: (state, action) => {\n      state.ratio = action.payload;\n    },\n    updateIsWater: (state) => {\n      state.isWater = !state.isWater;\n    },\n    calculateAmount: (state, action) => {\n      state.amount = Math.round(action.payload / state.ratio);\n    },\n    calculateWater: (state, action) => {\n      state.water = Math.round(action.payload * state.ratio);\n    },\n    calculateIceCoffeeAmount: (state, action) => {\n      state.amount = Math.round((action.payload / state.ratio) * 2);\n    },\n    calculateIceCoffeeWater: (state, action) => {\n      state.water = Math.round((action.payload * state.ratio) / 2);\n    },\n  },\n});\n\nexport const {\n  updateIsWater,\n  updateWater,\n  updateRatio,\n  updateAmount,\n  calculateAmount,\n  calculateWater,\n  calculateIceCoffeeWater,\n  calculateIceCoffeeAmount,\n} = CoffeeSlice.actions;\n\nexport default CoffeeSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport { screenType } from './type';\n\nexport const initialState: screenType = {\n  nowScreen: 'normal',\n};\n\nexport const ScreenSlice = createSlice({\n  name: 'screen',\n  initialState,\n  reducers: {\n    changeScreen: (state, action) => {\n      state.nowScreen = action.payload;\n    },\n  },\n});\n\nexport const { changeScreen } = ScreenSlice.actions;\n\nexport default ScreenSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport coffeeReducer from './coffeeSlice';\nimport screenReducer from './screenSlice';\n\nexport const store = configureStore({\n  reducer: {\n    coffee: coffeeReducer,\n    screen: screenReducer,\n  },\n});\n","import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\n\n// The useColorScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\n}\n","const tintColorLight = '#333';\nconst tintColorDark = '#fff';\n\nexport default {\n  light: {\n    text: '#333',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n  },\n  dark: {\n    text: '#fff',\n    background: '#333',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n  },\n  toggleSwitch: {\n    track: '#fff',\n    trueTrack: '#56DE03',\n    falseTrack: '#DDDDDD',\n  },\n  inputView: {\n    wText: '#fff',\n    dText: '#333',\n    wBackground: 'rgba(168, 168, 168, 0.09)',\n    dBackground: 'rgba(216, 216, 216, 0.09)',\n  },\n  timerButtonLight: {\n    startText:  'rgb(52, 199, 89)',\n    startBackground: 'rgba(52, 199, 89, 0.4)',\n    startBorder: 'rgba(52, 199, 89, 0.3)',\n    stopText: 'rgba(255, 59, 48, 0.7)',\n    stopBackground: 'rgba(255, 59, 48, 0.4)',\n  },\n  timerButtonDark: {\n    startText:  'rgba(48, 209, 88, 0.9)',\n    startBackground: 'rgba(48, 209, 88, 0.3)',\n    stopText: 'rgba(255, 69, 58, 0.9)',\n    stopBackground: 'rgba(255, 69, 58, 0.3)',\n  },\n  timerResetButton: {\n    dText: '#333',\n    wText: '#fff',\n    background: 'rgb(208, 208, 208)'\n  }\n};\n","/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from './Colors';\nimport useColorScheme from '../../../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import { memo, useState } from 'react';\nimport { TextInput, StyleSheet, useColorScheme } from 'react-native';\nimport { useDispatch } from 'react-redux';\n\nimport { Text, View } from '../../assets/constants/Themed';\nimport { updateAmount, updateRatio, updateWater } from '../../../redux/coffeeSlice';\nimport { RatioInputType } from '../../types/type';\nimport Colors from '../../assets/constants/Colors';\n\nexport const RatioInput = memo((props: RatioInputType) => {\n  const dispatch = useDispatch();\n  const { title } = props;\n  const isDarkMode = useColorScheme() === 'dark';\n  const [ratio, setRatio] = useState<number>(0);\n\n  return (\n    <View>\n      <Text style={styles.title}>{title}</Text>\n      <TextInput\n        style={[styles.input, isDarkMode ? styles.dark : styles.light]}\n        placeholder=\"input\"\n        maxLength={2}\n        returnKeyType=\"done\"\n        keyboardType=\"numbers-and-punctuation\"\n        // textAlign=\"center\"\n        onChangeText={(newText) => setRatio(Number(newText))}\n        onSubmitEditing={() => {\n          dispatch(updateRatio(ratio));\n          dispatch(updateWater(0));\n          dispatch(updateAmount(0));\n        }}\n      />\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 20,\n    marginBottom: 5,\n  },\n  input: {\n    padding: 10,\n    marginTop: 8,\n    borderRadius: 10,\n    width: '95%',\n    fontSize: 20,\n  },\n  dark: {\n    color: Colors['inputView'].wText,\n    backgroundColor: Colors['inputView'].wBackground,\n  },\n  light: {\n    color: Colors['inputView'].dText,\n    backgroundColor: Colors['inputView'].wBackground,\n  },\n});\n","import { StatusBar } from 'expo-status-bar';\nimport { Platform, StyleSheet } from 'react-native';\n\nimport { View } from '../../assets/constants/Themed';\nimport { RatioInput } from '../Input/RatioInput';\nimport { useIsFocused } from '@react-navigation/native';\n\nexport default function ModalScreen() {\n  const isForcused = useIsFocused();\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style={Platform.OS === 'ios' ? 'light' : 'auto'} />\n      <RatioInput title={'Ratio (default: 15)'} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingLeft: 15,\n    paddingTop: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  switchButton: {\n    marginTop: 15,\n  },\n});\n","import { StyleSheet, TouchableOpacity } from 'react-native';\n\nimport { Text, View } from '../../assets/constants/Themed';\nimport { RootStackScreenProps } from '../../../types';\n\nexport default function NotFoundScreen({ navigation }: RootStackScreenProps<'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>きてくれてありがとう！今日もコーヒーを楽しもう！</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>ホームへ戻る</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import { memo, useState } from 'react';\nimport { TextInput, StyleSheet, useColorScheme, SafeAreaView } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Colors from '../../assets/constants/Colors';\nimport { calculateAmount, calculateIceCoffeeAmount, updateWater } from '../../../redux/coffeeSlice';\n\nexport const WaterInput = memo(() => {\n  const dispatch = useDispatch();\n  const isDarkMode = useColorScheme() === 'dark';\n  const [water, setWater] = useState<number>(0);\n  const nowScreen = useSelector((state) => state.screen.nowScreen);\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <TextInput\n        style={[styles.input, isDarkMode ? styles.dark : styles.light]}\n        placeholder=\"input\"\n        maxLength={3}\n        returnKeyType=\"done\"\n        keyboardType=\"numbers-and-punctuation\"\n        textAlign=\"center\"\n        onChangeText={(newText) => setWater(Number(newText))}\n        onSubmitEditing={() => {\n          dispatch(updateWater(water));\n          if (nowScreen === 'normal' || nowScreen === 'cafeAuLait') {\n            dispatch(calculateAmount(water));\n          } else if (nowScreen === 'iceCoffee') {\n            dispatch(calculateIceCoffeeAmount(water));\n          }\n        }}\n      />\n    </SafeAreaView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  title: {\n    fontSize: 25,\n    marginBottom: 15,\n    left: -5,\n    textAlign: 'center',\n  },\n  input: {\n    padding: 8,\n    marginTop: 8,\n    borderRadius: 10,\n    width: 100,\n    height: 40,\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  dark: {\n    color: Colors['inputView'].wText,\n    backgroundColor: Colors['inputView'].wBackground,\n  },\n  light: {\n    color: Colors['inputView'].dText,\n    backgroundColor: Colors['inputView'].wBackground,\n  },\n});\n","import React, { memo, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { StyleSheet, useColorScheme } from 'react-native';\n\nimport { Text, View } from '../../assets/constants/Themed';\nimport Colors from '../../assets/constants/Colors';\n\nexport const WaterView = memo(() => {\n  const isDarkMode = useColorScheme() === 'dark';\n  const { water } = useSelector((state) => state.coffee);\n\n  return (\n    <View style={[styles.container, isDarkMode ? styles.dark : styles.light]}>\n      <Text style={styles.text}>{water} cc</Text>\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8,\n    marginTop: 8,\n    borderRadius: 10,\n    width: 100,\n    height: 40,\n    textAlign: 'center',\n  },\n  text: {\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  dark: {\n    color: Colors['inputView'].wText,\n    backgroundColor: Colors['inputView'].wBackground,\n  },\n  light: {\n    color: Colors['inputView'].dText,\n    backgroundColor: Colors['inputView'].wBackground,\n  },\n});\n","import { StyleSheet } from 'react-native';\n\nimport { Text, View } from '../../assets/constants/Themed';\nimport { WaterViewType } from '../../types/type';\nimport { WaterInput } from '../Input/WaterInput';\nimport { WaterView } from './WaterView';\nimport { useSelector } from 'react-redux';\nimport { memo } from 'react';\n\nexport const WaterBox = memo((props: WaterViewType) => {\n  const { title } = props;\n  const isLeftWater = useSelector((state) => state.coffee.isWater);\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{title}</Text>\n      {isLeftWater ? (\n        <View>\n          <WaterView />\n        </View>\n      ) : (\n        <View>\n          <WaterInput />\n        </View>\n      )}\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 25,\n    paddingBottom: 12,\n  },\n});\n","import React, { useState } from 'react';\nimport { useColorScheme } from 'react-native';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { useDispatch } from 'react-redux';\n\nimport { updateIsWater, updateAmount, updateWater } from '../../../redux/coffeeSlice';\n\nexport const ChangeUiButton = () => {\n  const dispatch = useDispatch();\n  const isDarkMode = useColorScheme() === 'dark';\n\n  return (\n    <FontAwesome\n      name=\"exchange\"\n      size={24}\n      color={isDarkMode ? 'white' : 'black'}\n      onPress={() => {\n        dispatch(updateIsWater());\n        dispatch(updateAmount(0));\n        dispatch(updateWater(0));\n      }}\n    />\n  );\n};\n","import { memo, useState } from 'react';\nimport { TextInput, StyleSheet, useColorScheme, SafeAreaView, Switch } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Colors from '../../assets/constants/Colors';\n\nimport { calculateWater, updateAmount, calculateIceCoffeeWater } from '../../../redux/coffeeSlice';\n\nexport const AmountInput = memo(() => {\n  const dispatch = useDispatch();\n  const isDarkMode = useColorScheme() === 'dark';\n  const [amount, setAmount] = useState<number>(0);\n  const nowScreen = useSelector((state) => state.screen.nowScreen);\n\n  return (\n    <TextInput\n      style={[styles.input, isDarkMode ? styles.dark : styles.light]}\n      placeholder=\"input\"\n      maxLength={3}\n      returnKeyType=\"done\"\n      keyboardType=\"numbers-and-punctuation\"\n      textAlign=\"center\"\n      onChangeText={(newText) => setAmount(Number(newText))}\n      onSubmitEditing={() => {\n        dispatch(updateAmount(amount));\n        if (nowScreen === 'cafeAuLait' || nowScreen === 'normal') {\n          dispatch(calculateWater(amount));\n        } else if (nowScreen === 'iceCoffee') {\n          dispatch(calculateIceCoffeeWater(amount));\n        }\n      }}\n    />\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  input: {\n    padding: 8,\n    marginTop: 8,\n    borderRadius: 10,\n    width: 100,\n    height: 40,\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  dark: {\n    color: Colors['inputView'].wText,\n    backgroundColor: Colors['inputView'].wBackground,\n  },\n  light: {\n    color: Colors['inputView'].dText,\n    backgroundColor: Colors['inputView'].wBackground,\n  },\n});\n","import React, { memo, useEffect, useState } from 'react';\nimport { useColorScheme, StyleSheet } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport Colors from '../../assets/constants/Colors';\nimport { Text, View } from '../../assets/constants/Themed';\n\nexport const AmountView = memo(() => {\n  const isDarkMode = useColorScheme() === 'dark';\n  const { amount } = useSelector((state) => state.coffee);\n\n  return (\n    <View style={[styles.container, isDarkMode ? styles.dark : styles.light]}>\n      <Text style={styles.text}>{amount} g</Text>\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8,\n    marginTop: 8,\n    borderRadius: 10,\n    width: 100,\n    height: 40,\n  },\n  text: {\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  dark: {\n    color: Colors['inputView'].wText,\n    backgroundColor: Colors['inputView'].wBackground,\n  },\n  light: {\n    color: Colors['inputView'].dText,\n    backgroundColor: Colors['inputView'].wBackground,\n  },\n});\n","import React, { memo } from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport { Text, View } from '../../assets/constants/Themed';\nimport { WaterViewType } from '../../types/type';\nimport { AmountInput } from '../Input/AmountInput';\nimport { AmountView } from './AmountView';\nimport { useSelector } from 'react-redux';\n\nexport const AmountBox = memo((props: WaterViewType) => {\n  const { title } = props;\n  const isLeftWater = useSelector((state) => state.coffee.isWater);\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{title}</Text>\n      {isLeftWater ? (\n        <View>\n          <AmountInput />\n        </View>\n      ) : (\n        <View>\n          <AmountView />\n        </View>\n      )}\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 25,\n    paddingBottom: 12,\n  },\n});\n","import { StyleSheet } from 'react-native';\n\nimport { WaterBox } from './WaterBox';\nimport { View } from '../../assets/constants/Themed';\nimport React, { memo } from 'react';\nimport { ChangeUiButton } from '../Button/ChangeUiButton';\nimport { AmountBox } from './AmountBox';\n\nexport const LeftWater = memo(() => {\n  return (\n    <>\n      <View style={styles.rowItem}>\n        <WaterBox title={'湯量'} />\n      </View>\n      <ChangeUiButton />\n      <View style={styles.rowItem}>\n        <AmountBox title={'豆量'} />\n      </View>\n    </>\n  );\n});\n\nconst styles = StyleSheet.create({\n  rowItem: {\n    textAlign: 'center',\n    width: 150,\n    flex: 0.5,\n    paddingLeft: 30,\n    paddingRight: 30,\n  },\n})","import { StyleSheet } from 'react-native';\n\nimport { WaterBox } from './WaterBox';\nimport { View } from '../../assets/constants/Themed';\nimport React, { memo } from 'react';\nimport { ChangeUiButton } from '../Button/ChangeUiButton';\nimport { AmountBox } from './AmountBox';\n\nexport const RightWater = memo(() => {\n  return (\n    <>\n      <View style={styles.rowItem}>\n        <AmountBox title={'豆量'} />\n      </View>\n      <ChangeUiButton />\n      <View style={styles.rowItem}>\n        <WaterBox title={'湯量'} />\n      </View>\n    </>\n  );\n});\n\nconst styles = StyleSheet.create({\n  rowItem: {\n    textAlign: 'center',\n    width: 150,\n    flex: 0.5,\n    paddingLeft: 30,\n    paddingRight: 30,\n  },\n});\n","import React, { memo, useEffect } from 'react';\nimport { useColorScheme, StyleSheet } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport Colors from '../../assets/constants/Colors';\nimport { Text, View } from '../../assets/constants/Themed';\n\nexport const RatioView = memo(() => {\n  const isDarkMode = useColorScheme() === 'dark';\n  const ratio: number = useSelector((state) => state.coffee.ratio);\n  const { nowScreen } = useSelector((state) => state.screen);\n\n  return (\n    <View style={[styles.container, isDarkMode ? styles.dark : styles.light]}>\n      <Text style={styles.text}>\n        Ratio {nowScreen == 'iceCoffee' ? 2 : 1} : {ratio}\n      </Text>\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 10,\n    marginTop: 8,\n    marginRight: 10,\n    borderRadius: 10,\n    width: 150,\n    height: 40,\n    textAlign: 'center',\n  },\n  text: {\n    fontSize: 20,\n    textAlign: 'center',\n  },\n  dark: {\n    color: Colors['inputView'].wText,\n    backgroundColor: Colors['inputView'].wBackground,\n  },\n  light: {\n    color: Colors['inputView'].dText,\n    backgroundColor: Colors['inputView'].wBackground,\n  },\n});\n","import React, { memo, useEffect, useState } from 'react';\nimport { Text, View } from '../../assets/constants/Themed';\nimport { Stopwatch } from 'react-native-stopwatch-timer';\nimport { TouchableHighlight, StyleSheet } from 'react-native';\nimport Colors from '../../assets/constants/Colors';\nimport { useColorScheme } from 'react-native';\n\nexport const TimerView = memo(() => {\n  const isDarkMode = useColorScheme() === 'dark';\n  const [isStopwatchStart, setIsStopwatchStart] = useState(false);\n  const [resetStopwatch, setResetStopwatch] = useState(false);\n\n  const styles = StyleSheet.create({\n    container: {\n      marginTop: 15,\n    },\n    sectionStyle: {},\n    button: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      marginTop: 10,\n      marginHorizontal: 40,\n    },\n    buttonText: {\n      fontSize: 20,\n      color: isDarkMode ? Colors['timerResetButton'].dText : Colors['timerResetButton'].wText,\n    },\n    dark: {\n      color: Colors['inputView'].wText,\n      // backgroundColor: Colors['inputView'].wBackground,\n    },\n    light: {\n      color: Colors['inputView'].dText,\n      // backgroundColor: Colors['inputView'].wBackground,\n    },\n    startButton: {\n      width: 80,\n      height: 80,\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 10,\n      borderRadius: 100,\n\n      backgroundColor: isDarkMode\n        ? Colors['timerButtonDark'].startBackground\n        : Colors['timerButtonLight'].startBackground,\n    },\n    startText: {\n      color: isDarkMode\n        ? Colors['timerButtonDark'].startText\n        : Colors['timerButtonLight'].startText,\n    },\n    stopButton: {\n      backgroundColor: isDarkMode\n        ? Colors['timerButtonDark'].stopBackground\n        : Colors['timerButtonLight'].stopBackground,\n      width: 80,\n      height: 80,\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 10,\n      borderRadius: 100,\n    },\n    stopText: {\n      color: isDarkMode ? Colors['timerButtonDark'].stopText : Colors['timerButtonLight'].stopText,\n    },\n    resetButton: {\n      backgroundColor: Colors['timerResetButton'].background,\n      width: 80,\n      height: 80,\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 10,\n      borderRadius: 100,\n    },\n  });\n\n  const options = {\n    container: {\n      paddingTop: 20,\n      borderRadius: 4,\n      alignItems: 'center',\n    },\n    text: {\n      fontSize: 84,\n      fontWeight: '300',\n      color: isDarkMode ? Colors['dark'].text : Colors['light'].text,\n      margin: 20,\n    },\n  };\n\n  return (\n    <>\n      <View style={styles.container}>\n        <View style={[styles.sectionStyle, isDarkMode ? styles.dark : styles.light]}>\n          <Stopwatch\n            start={isStopwatchStart}\n            reset={resetStopwatch}\n            options={options}\n            style={isDarkMode ? styles.dark : styles.light}\n          />\n        </View>\n        <View style={[styles.button]}>\n          <TouchableHighlight\n            onPress={() => {\n              setIsStopwatchStart(false);\n              setResetStopwatch(true);\n            }}\n            style={[styles.resetButton]}>\n            <Text style={[styles.buttonText]}>RESET</Text>\n          </TouchableHighlight>\n          <TouchableHighlight\n            onPress={() => {\n              setIsStopwatchStart(!isStopwatchStart);\n              setResetStopwatch(false);\n            }}\n            style={[isStopwatchStart ? styles.stopButton : styles.startButton]}>\n            <Text\n              style={[styles.buttonText, isStopwatchStart ? styles.stopText : styles.startText]}>\n              {!isStopwatchStart ? 'START' : 'STOP'}\n            </Text>\n          </TouchableHighlight>\n        </View>\n      </View>\n    </>\n  );\n});\n","import React, { useEffect } from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport { View } from '../../assets/constants/Themed';\nimport { RootTabScreenProps } from '../../../types';\nimport { LeftWater } from '../View/LeftWater';\nimport { RightWater } from '../View/RightWater';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RatioView } from '../View/RatioVeiw';\nimport Colors from '../../assets/constants/Colors';\nimport { TimerView } from '../View/TimerView';\nimport { useIsFocused } from '@react-navigation/native';\nimport { changeScreen } from '../../../redux/screenSlice';\nimport { updateAmount, updateWater } from '../../../redux/coffeeSlice';\n\nexport default function NormalScreen({}: RootTabScreenProps<'Normal'>) {\n  const isLeftWater = useSelector((state) => state.coffee.isWater);\n  const dispatch = useDispatch();\n  const isForcused = useIsFocused();\n\n  useEffect(() => {\n    if (isForcused) {\n      dispatch(changeScreen('normal'));\n      dispatch(updateAmount(0));\n      dispatch(updateWater(0));\n    }\n  }, [isForcused]);\n\n  return (\n    <View style={styles.container}>\n      <View style={[styles.containerItem]}>\n        {isLeftWater ? (\n          <>\n            <RightWater />\n          </>\n        ) : (\n          <>\n            <LeftWater />\n          </>\n        )}\n      </View>\n      <View style={styles.ratioContainer}>\n        <RatioView />\n      </View>\n      <View>\n        <TimerView />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  containerItem: {\n    marginTop: 20,\n    padding: 10,\n    flexDirection: 'row',\n  },\n  ratioContainer: {\n    marginTop: 39,\n    padding: 10,\n    alignItems: 'center',\n  },\n  dark: {\n    color: Colors['dark'].text,\n    backgroundColor: Colors['dark'].background,\n  },\n  light: {\n    color: Colors['light'].text,\n    backgroundColor: Colors['light'].background,\n  },\n});\n","import { useIsFocused } from '@react-navigation/native';\nimport React, { useEffect } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { View } from '../../assets/constants/Themed';\nimport { LeftWater } from '../View/LeftWater';\nimport { RatioView } from '../View/RatioVeiw';\nimport { RightWater } from '../View/RightWater';\nimport { TimerView } from '../View/TimerView';\nimport Colors from '../../assets/constants/Colors';\nimport { updateAmount, updateWater } from '../../../redux/coffeeSlice';\nimport { changeScreen } from '../../../redux/screenSlice';\n\nexport default function CafeAuLaitScreen() {\n  const isLeftWater = useSelector((state) => state.coffee.isWater);\n  const dispatch = useDispatch();\n  const isForcused = useIsFocused();\n\n  useEffect(() => {\n    if (isForcused) {\n      dispatch(changeScreen('cafeAuLait'));\n      dispatch(updateAmount(0));\n      dispatch(updateWater(0));\n    }\n  }, [isForcused]);\n\n  return (\n    <View style={styles.container}>\n      <View style={[styles.containerItem]}>\n        {isLeftWater ? (\n          <>\n            <RightWater />\n          </>\n        ) : (\n          <>\n            <LeftWater />\n          </>\n        )}\n      </View>\n      <View style={styles.ratioContainer}>\n        <RatioView />\n      </View>\n      <View>\n        <TimerView />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  containerItem: {\n    marginTop: 20,\n    padding: 10,\n    flexDirection: 'row',\n  },\n  ratioContainer: {\n    marginTop: 39,\n    padding: 10,\n    alignItems: 'center',\n  },\n  dark: {\n    color: Colors['dark'].text,\n    backgroundColor: Colors['dark'].background,\n  },\n  light: {\n    color: Colors['light'].text,\n    backgroundColor: Colors['light'].background,\n  },\n});\n","/**\n * Learn more about deep linking with React Navigation\n * https://reactnavigation.org/docs/deep-linking\n * https://reactnavigation.org/docs/configuring-links\n */\n\nimport { LinkingOptions } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\n\nimport { RootStackParamList } from '../../types';\n\nconst linking: LinkingOptions<RootStackParamList> = {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    screens: {\n      Root: {\n        screens: {\n          Normal: {\n            screens: {\n              NormalScreen: 'normal',\n            },\n          },\n          CafeAuLait: {\n            screens: {\n              CafeAuLaitScreen: 'cafe au lait',\n            },\n          },\n          IceCoffee: {\n            screens: {\n              IceCoffeeScreen: 'Ice coffee',\n            },\n          },\n          Setting: {\n            screens: {\n              SettingScreen: 'Setting',\n            },\n          },\n        },\n      },\n      Modal: 'modal',\n      NotFound: '*',\n    },\n  },\n};\n\nexport default linking;\n","import React, { useEffect } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useIsFocused } from '@react-navigation/native';\n\nimport { View } from '../../assets/constants/Themed';\nimport { LeftWater } from '../View/LeftWater';\nimport { RatioView } from '../View/RatioVeiw';\nimport { RightWater } from '../View/RightWater';\nimport { TimerView } from '../View/TimerView';\nimport Colors from '../../assets/constants/Colors';\nimport { updateAmount, updateWater } from '../../../redux/coffeeSlice';\nimport { changeScreen } from '../../../redux/screenSlice';\n\nexport default function IceCoffee() {\n  const isLeftWater = useSelector((state) => state.coffee.isWater);\n  const dispatch = useDispatch();\n  let isForcused = useIsFocused();\n\n  // TODO:\n  // 画面遷移時ratioのデフォルト値を変更したい\n  // modalから再度画面遷移した際にもイベントが発火してしまう。\n  useEffect(() => {\n    if (isForcused) {\n      dispatch(changeScreen('iceCoffee'));\n      dispatch(updateAmount(0));\n      dispatch(updateWater(0));\n    }\n  }, [isForcused]);\n\n  return (\n    <View style={styles.container}>\n      <View style={[styles.containerItem]}>\n        {isLeftWater ? (\n          <>\n            <RightWater />\n          </>\n        ) : (\n          <>\n            <LeftWater />\n          </>\n        )}\n      </View>\n      <View style={styles.ratioContainer}>\n        <RatioView />\n      </View>\n      <View>\n        <TimerView />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  containerItem: {\n    marginTop: 20,\n    padding: 10,\n    flexDirection: 'row',\n  },\n  ratioContainer: {\n    marginTop: 39,\n    padding: 10,\n    alignItems: 'center',\n  },\n  dark: {\n    color: Colors['dark'].text,\n    backgroundColor: Colors['dark'].background,\n  },\n  light: {\n    color: Colors['light'].text,\n    backgroundColor: Colors['light'].background,\n  },\n});\n","/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName, Pressable } from 'react-native';\nimport { MaterialCommunityIcons, Ionicons, Feather, FontAwesome, AntDesign } from '@expo/vector-icons';\n\nimport Colors from '../assets/constants/Colors';\nimport useColorScheme from '../../hooks/useColorScheme';\nimport ModalScreen from '../components/screens/ModalScreen';\nimport NotFoundScreen from '../components/screens/NotFoundScreen';\nimport NormalScreen from '../components/screens/NormalScreen';\nimport CafeAuLaitScreen from '../components/screens/CafeAuLaitScreen';\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../../types';\nimport LinkingConfiguration from './LinkingConfiguration';\nimport IceCoffee from '../components/screens/IceCoffeeScreen';\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{ headerShown: false }} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\n        <Stack.Screen name=\"Modal\" component={ModalScreen} />\n      </Stack.Group>\n    </Stack.Navigator>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\n\nfunction BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"Normal\"\n      screenOptions={{\n        tabBarActiveTintColor: Colors[colorScheme].tint,\n      }}>\n      <BottomTab.Screen\n        name=\"Normal\"\n        component={NormalScreen}\n        options={({ navigation }: RootTabScreenProps<'Normal'>) => ({\n          title: 'Coffee',\n          tabBarIcon: ({ color }) => <Feather name=\"coffee\" size={24} color={color} />,\n          headerRight: () => (\n            <Pressable\n              onPress={() => navigation.navigate('Modal')}\n              style={({ pressed }) => ({\n                opacity: pressed ? 0.5 : 1,\n              })}>\n              <AntDesign\n                name=\"setting\"\n                size={25}\n                color={Colors[colorScheme].text}\n                style={{ marginRight: 15 }}\n              />\n            </Pressable>\n          ),\n        })}\n      />\n\n      <BottomTab.Screen\n        name=\"CafeAuLait\"\n        component={CafeAuLaitScreen}\n        options={({ navigation }: RootTabScreenProps<'CafeAuLait'>) => ({\n          title: 'Cafe Au Lait',\n          tabBarIcon: ({ color }) => <Ionicons name=\"ios-cafe-outline\" size={30} color={color} />,\n          headerRight: () => (\n            <Pressable\n              onPress={() => navigation.navigate('Modal')}\n              style={({ pressed }) => ({\n                opacity: pressed ? 0.5 : 1,\n              })}>\n              <AntDesign\n                name=\"setting\"\n                size={25}\n                color={Colors[colorScheme].text}\n                style={{ marginRight: 15 }}\n              />\n            </Pressable>\n          ),\n        })}\n      />\n      <BottomTab.Screen\n        name=\"IceCoffee\"\n        component={IceCoffee}\n        options={({ navigation }: RootTabScreenProps<'IceCoffee'>) => ({\n          title: 'Ice Coffee',\n          tabBarIcon: ({ color }) => (\n            <MaterialCommunityIcons name=\"cup-water\" size={24} color={color} />\n          ),\n          headerRight: () => (\n            <Pressable\n              onPress={() => navigation.navigate('Modal')}\n              style={({ pressed }) => ({\n                opacity: pressed ? 0.5 : 1,\n              })}>\n              <AntDesign\n                name=\"setting\"\n                size={25}\n                color={Colors[colorScheme].text}\n                style={{ marginRight: 15 }}\n              />\n            </Pressable>\n          ),\n        })}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof FontAwesome>['name'];\n  color: string;\n}) {\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n","import { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './src/navigation';\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <Provider store={store}>\n        <SafeAreaProvider>\n          <Navigation colorScheme={colorScheme} />\n          <StatusBar />\n        </SafeAreaProvider>\n      </Provider>\n    );\n  }\n}\n","import { FontAwesome } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useEffect, useState } from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...FontAwesome.font,\n          'space-mono': require('../src/assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";"],"sourceRoot":""}